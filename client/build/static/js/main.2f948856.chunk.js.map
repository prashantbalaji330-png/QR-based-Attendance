{"version":3,"sources":["../../../../New folder (2)/QR/client/src/contexts/AuthContext.js","../../../../New folder (2)/QR/client/src/components/Navbar.js","../../../../New folder (2)/QR/client/src/components/auth/Login.js","../../../../New folder (2)/QR/client/src/components/auth/Register.js","../../../../New folder (2)/QR/client/src/components/auth/ForgotPassword.js","../../../../New folder (2)/QR/client/src/components/auth/ResetPassword.js","../../../../New folder (2)/QR/client/src/components/teacher/DashboardHome.js","../../../../New folder (2)/QR/client/src/components/teacher/QRGenerator.js","../../../../New folder (2)/QR/client/src/components/teacher/AttendanceView.js","../../../../New folder (2)/QR/client/src/components/teacher/TeacherDashboard.js","../../../../New folder (2)/QR/client/src/components/student/DashboardHome.js","../../../../New folder (2)/QR/client/src/components/student/QRScanner.js","../../../../New folder (2)/QR/client/src/components/student/MyAttendance.js","../../../../New folder (2)/QR/client/src/components/student/StudentDashboard.js","../../../../New folder (2)/QR/client/src/components/Profile.js","../../../../New folder (2)/QR/client/src/components/LoadingSpinner.js","../../../../New folder (2)/QR/client/src/App.js","../../../../New folder (2)/QR/client/src/index.js"],"names":["AuthContext","createContext","initialState","user","token","localStorage","getItem","isAuthenticated","loading","error","authReducer","state","action","type","payload","data","AuthProvider","_ref","children","dispatch","useReducer","useEffect","axios","defaults","headers","common","setItem","removeItem","async","console","log","response","get","checkAuth","value","login","email","password","post","userData","toast","success","_error$response","_error$response$data","message","register","_error$response2","_error$response2$data","logout","info","clearAuthState","sessionStorage","clear","setTimeout","window","location","reload","updateProfile","put","profileData","_error$response3","_error$response3$data","changePassword","currentPassword","newPassword","_error$response4","_error$response4$data","_jsx","Provider","useAuth","context","useContext","Error","Navbar","navigate","useNavigate","showDropdown","setShowDropdown","useState","className","_jsxs","Link","to","id","role","_Fragment","onClick","FaUser","name","FaCog","handleLogout","FaSignOutAlt","Login","formData","setFormData","showPassword","setShowPassword","setLoading","handleChange","e","target","onSubmit","preventDefault","result","_result$user","userRole","htmlFor","FaEnvelope","onChange","required","placeholder","FaLock","FaEyeSlash","FaEye","disabled","Register","mobileNumber","confirmPassword","studentId","department","year","showConfirmPassword","setShowConfirmPassword","alert","length","test","parseInt","FaPhone","maxLength","FaIdCard","FaGraduationCap","ForgotPassword","setEmail","emailSent","setEmailSent","style","fontSize","FaArrowLeft","ResetPassword","validating","setValidating","tokenValid","setTokenValid","setSuccess","useParams","validateToken","FaCheck","DashboardHome","stats","setStats","todayAttendance","activeQRCodes","totalStudents","recentActivity","fetchDashboardStats","today","Date","toISOString","split","attendanceData","count","total","attendance","slice","Math","round","FaQrcode","size","FaUsers","FaChartBar","FaCalendarAlt","map","record","_record$qrCode","student","qrCode","description","coordinates","latitude","longitude","toFixed","markedAt","toLocaleTimeString","_id","QRGenerator","course","validityMinutes","generatedQR","setGeneratedQR","FaClock","min","max","src","qrCodeImage","alt","maxWidth","code","expiresAt","toLocaleString","copyToClipboard","navigator","clipboard","writeText","FaCopy","downloadQR","canvas","document","createElement","ctx","getContext","img","Image","onload","width","height","drawImage","link","download","href","toDataURL","click","FaDownload","generatedAt","AttendanceView","setAttendance","selectedDate","setSelectedDate","fetchAttendance","useCallback","present","late","print","status","confirm","delete","deleteAttendance","title","FaTrash","TeacherDashboard","Routes","Route","path","element","totalAttendance","presentDays","lateDays","attendanceRate","fetchStudentStats","startDate","setDate","getDate","params","endDate","presentCount","filter","a","lateCount","totalCount","QRScanner","scanning","setScanning","setResult","scannerRef","useRef","current","handleScan","decodedText","validateAndMarkAttendance","handleError","err","Promise","resolve","reject","geolocation","getCurrentPosition","position","coords","warn","enableHighAccuracy","timeout","maximumAge","validateResponse","attendanceResponse","qrCodeId","startScanner","Html5QrcodeScanner","fps","qrbox","aspectRatio","render","FaCamera","FaTimes","resetScanner","MyAttendance","setStartDate","now","setEndDate","_record$teacher","date","toLocaleDateString","teacher","StudentDashboard","Profile","activeTab","setActiveTab","setProfileData","passwordData","setPasswordData","handleProfileChange","handlePasswordChange","LoadingSpinner","App","Navigate","replace","ReactDOM","createRoot","getElementById","React","StrictMode","BrowserRouter","ToastContainer","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover"],"mappings":"4PAIA,MAAMA,EAAcC,0BAEdC,EAAe,CACnBC,KAAM,KACNC,MAAOC,aAAaC,QAAQ,SAC5BC,iBAAiB,EACjBC,SAAS,EACTC,MAAO,MAGHC,EAAcA,CAACC,EAAOC,KAC1B,OAAQA,EAAOC,MACb,IAAK,cACH,MAAO,IACFF,EACHH,SAAS,EACTC,MAAO,MAEX,IAAK,gBACH,MAAO,IACFE,EACHR,KAAMS,EAAOE,QAAQC,KACrBX,MAAOQ,EAAOE,QAAQC,KAAKX,MAC3BG,iBAAiB,EACjBC,SAAS,EACTC,MAAO,MAEX,IAAK,gBACH,MAAO,IACFE,EACHR,KAAM,KACNC,MAAO,KACPG,iBAAiB,EACjBC,SAAS,EACTC,MAAOG,EAAOE,SAElB,IAAK,SACH,MAAO,IACFH,EACHR,KAAM,KACNC,MAAO,KACPG,iBAAiB,EACjBC,SAAS,EACTC,MAAO,MAEX,IAAK,cACH,MAAO,IACFE,EACHR,KAAM,IAAKQ,EAAMR,QAASS,EAAOE,UAErC,IAAK,cACH,MAAO,IACFH,EACHH,QAASI,EAAOE,SAEpB,QACE,OAAOH,IAIAK,EAAeC,IAAmB,IAAlB,SAAEC,GAAUD,EACvC,MAAON,EAAOQ,GAAYC,qBAAWV,EAAaR,GAGlDmB,oBAAU,KACJV,EAAMP,OACRkB,IAAMC,SAASC,QAAQC,OAAsB,cAAI,UAAUd,EAAMP,QACjEC,aAAaqB,QAAQ,QAASf,EAAMP,gBAE7BkB,IAAMC,SAASC,QAAQC,OAAsB,cACpDpB,aAAasB,WAAW,WAEzB,CAAChB,EAAMP,QAGViB,oBAAU,KACUO,WAChB,MAAMxB,EAAQC,aAAaC,QAAQ,SAGnC,GAFAuB,QAAQC,IAAI,0CAA2C1B,EAAQ,UAAY,WAEvEA,EACF,IAEEkB,IAAMC,SAASC,QAAQC,OAAsB,cAAI,UAAUrB,IAC3DyB,QAAQC,IAAI,6CAEZ,MAAMC,QAAiBT,IAAMU,IAAI,gBACjCH,QAAQC,IAAI,uCAAwCC,EAAShB,KAAKA,MAElEI,EAAS,CACPN,KAAM,gBACNC,QAAS,CAAEC,KAAMgB,EAAShB,KAAKA,OAEnC,CAAE,MAAON,GACPoB,QAAQpB,MAAM,mCAAoCA,UAE3Ca,IAAMC,SAASC,QAAQC,OAAsB,cACpDpB,aAAasB,WAAW,SACxBR,EAAS,CAAEN,KAAM,UACnB,MAEAgB,QAAQC,IAAI,0DAEZX,EAAS,CAAEN,KAAM,cAAeC,SAAS,IACrCH,EAAMJ,iBACRY,EAAS,CAAEN,KAAM,YAKvBoB,IACC,IAEH,MA4HMC,EAAQ,CACZ/B,KAAMQ,EAAMR,KACZC,MAAOO,EAAMP,MACbG,gBAAiBI,EAAMJ,gBACvBC,QAASG,EAAMH,QACfC,MAAOE,EAAMF,MACb0B,MAlIYP,MAAOQ,EAAOC,KAC1BR,QAAQC,IAAI,wCACZX,EAAS,CAAEN,KAAM,gBAEjB,IACE,MAAMkB,QAAiBT,IAAMgB,KAAK,kBAAmB,CACnDF,QACAC,aAGFR,QAAQC,IAAI,gCAAiCC,EAAShB,MAGtD,MAAMX,EAAQ2B,EAAShB,KAAKA,KAAKX,MAC3BmC,EAAWR,EAAShB,KAAKA,KAgB/B,OAdAc,QAAQC,IAAI,+BAAgC1B,EAAQ,UAAY,WAChEyB,QAAQC,IAAI,2BAA4BS,GAExCjB,IAAMC,SAASC,QAAQC,OAAsB,cAAI,UAAUrB,IAC3DC,aAAaqB,QAAQ,QAAStB,GAG9Be,EAAS,CACPN,KAAM,gBACNC,QAAS,CAAEC,KAAMwB,KAGnBV,QAAQC,IAAI,6CAA8CS,GAC1DC,IAAMC,QAAQ,qBACP,CAAEA,SAAS,EAAMtC,KAAMoC,EAChC,CAAE,MAAO9B,GAAQ,IAADiC,EAAAC,EACdd,QAAQpB,MAAM,8BAA+BA,GAC7C,MAAMmC,GAAwB,QAAdF,EAAAjC,EAAMsB,gBAAQ,IAAAW,GAAM,QAANC,EAAdD,EAAgB3B,YAAI,IAAA4B,OAAN,EAAdA,EAAsBC,UAAW,eAMjD,OALAzB,EAAS,CACPN,KAAM,gBACNC,QAAS8B,IAEXJ,IAAM/B,MAAMmC,GACL,CAAEH,SAAS,EAAOhC,MAAOmC,EAClC,GA2FAC,SAxFejB,UACfT,EAAS,CAAEN,KAAM,gBAEjB,IACE,MAAMkB,QAAiBT,IAAMgB,KAAK,qBAAsBC,GAGlDnC,EAAQ2B,EAAShB,KAAKA,KAAKX,MAUjC,OATAkB,IAAMC,SAASC,QAAQC,OAAsB,cAAI,UAAUrB,IAC3DC,aAAaqB,QAAQ,QAAStB,GAE9Be,EAAS,CACPN,KAAM,gBACNC,QAASiB,EAAShB,OAGpByB,IAAMC,QAAQ,4BACP,CAAEA,SAAS,EACpB,CAAE,MAAOhC,GAAQ,IAADqC,EAAAC,EACd,MAAMH,GAAwB,QAAdE,EAAArC,EAAMsB,gBAAQ,IAAAe,GAAM,QAANC,EAAdD,EAAgB/B,YAAI,IAAAgC,OAAN,EAAdA,EAAsBH,UAAW,sBAMjD,OALAzB,EAAS,CACPN,KAAM,gBACNC,QAAS8B,IAEXJ,IAAM/B,MAAMmC,GACL,CAAEH,SAAS,EAAOhC,MAAOmC,EAClC,GA+DAI,OA5DaA,YAEN1B,IAAMC,SAASC,QAAQC,OAAsB,cACpDpB,aAAasB,WAAW,SACxBR,EAAS,CAAEN,KAAM,WACjB2B,IAAMS,KAAK,4BAwDXC,eArDqBA,KACrBrB,QAAQC,IAAI,sDACLR,IAAMC,SAASC,QAAQC,OAAsB,cACpDpB,aAAasB,WAAW,SACxBwB,eAAeC,QACfjC,EAAS,CAAEN,KAAM,WAGjBwC,WAAW,KACTC,OAAOC,SAASC,UACf,MA4CHC,cAzCoB7B,UACpB,IACE,MAAMG,QAAiBT,IAAMoC,IAAI,eAAgBC,GAMjD,OALAxC,EAAS,CACPN,KAAM,cACNC,QAASiB,EAAShB,KAAKA,OAEzByB,IAAMC,QAAQ,iCACP,CAAEA,SAAS,EACpB,CAAE,MAAOhC,GAAQ,IAADmD,EAAAC,EACd,MAAMjB,GAAwB,QAAdgB,EAAAnD,EAAMsB,gBAAQ,IAAA6B,GAAM,QAANC,EAAdD,EAAgB7C,YAAI,IAAA8C,OAAN,EAAdA,EAAsBjB,UAAW,wBAEjD,OADAJ,IAAM/B,MAAMmC,GACL,CAAEH,SAAS,EAAOhC,MAAOmC,EAClC,GA6BAkB,eA1BqBlC,MAAOmC,EAAiBC,KAC7C,IAME,aALM1C,IAAMoC,IAAI,4BAA6B,CAC3CK,kBACAC,gBAEFxB,IAAMC,QAAQ,kCACP,CAAEA,SAAS,EACpB,CAAE,MAAOhC,GAAQ,IAADwD,EAAAC,EACd,MAAMtB,GAAwB,QAAdqB,EAAAxD,EAAMsB,gBAAQ,IAAAkC,GAAM,QAANC,EAAdD,EAAgBlD,YAAI,IAAAmD,OAAN,EAAdA,EAAsBtB,UAAW,yBAEjD,OADAJ,IAAM/B,MAAMmC,GACL,CAAEH,SAAS,EAAOhC,MAAOmC,EAClC,IAiBF,OACEuB,cAACnE,EAAYoE,SAAQ,CAAClC,MAAOA,EAAMhB,SAChCA,KAKMmD,EAAUA,KACrB,MAAMC,EAAUC,qBAAWvE,GAC3B,IAAKsE,EACH,MAAM,IAAIE,MAAM,+CAElB,OAAOF,G,WCnKMG,MAnGAA,KACb,MAAM,KAAEtE,EAAI,OAAE6C,GAAWqB,IACnBK,EAAWC,eACVC,EAAcC,GAAmBC,oBAAS,GAWjD,OACEX,cAAA,OAAKY,UAAU,uCAAsC7D,SACnD8D,eAAA,OAAKD,UAAU,YAAW7D,SAAA,CACxBiD,cAACc,IAAI,CAACF,UAAU,eAAeG,GAAG,IAAGhE,SAAC,sCAItCiD,cAAA,UACEY,UAAU,iBACVlE,KAAK,SACL,iBAAe,WACf,iBAAe,aAAYK,SAE3BiD,cAAA,QAAMY,UAAU,0BAGlBC,eAAA,OAAKD,UAAU,2BAA2BI,GAAG,YAAWjE,SAAA,CACtD8D,eAAA,MAAID,UAAU,qBAAoB7D,SAAA,CAChCiD,cAAA,MAAIY,UAAU,WAAU7D,SACtBiD,cAACc,IAAI,CAACF,UAAU,WAAWG,GAtBf,aAAX,OAAJ/E,QAAI,IAAJA,OAAI,EAAJA,EAAMiF,MAAqB,WAAa,WAsBalE,SAAC,gBAIrC,aAAX,OAAJf,QAAI,IAAJA,OAAI,EAAJA,EAAMiF,OACLJ,eAAAK,WAAA,CAAAnE,SAAA,CACEiD,cAAA,MAAIY,UAAU,WAAU7D,SACtBiD,cAACc,IAAI,CAACF,UAAU,WAAWG,GAAG,uBAAsBhE,SAAC,kBAIvDiD,cAAA,MAAIY,UAAU,WAAU7D,SACtBiD,cAACc,IAAI,CAACF,UAAU,WAAWG,GAAG,sBAAqBhE,SAAC,yBAM1C,aAAX,OAAJf,QAAI,IAAJA,OAAI,EAAJA,EAAMiF,OACLJ,eAAAK,WAAA,CAAAnE,SAAA,CACEiD,cAAA,MAAIY,UAAU,WAAU7D,SACtBiD,cAACc,IAAI,CAACF,UAAU,WAAWG,GAAG,gBAAehE,SAAC,cAIhDiD,cAAA,MAAIY,UAAU,WAAU7D,SACtBiD,cAACc,IAAI,CAACF,UAAU,WAAWG,GAAG,yBAAwBhE,SAAC,0BAQ/DiD,cAAA,OAAKY,UAAU,aAAY7D,SACzB8D,eAAA,OAAKD,UAAU,oBAAmB7D,SAAA,CAChC8D,eAAA,UACED,UAAU,wCACVO,QAASA,IAAMT,GAAiBD,GAAc1D,SAAA,CAE9CiD,cAACoB,IAAM,CAACR,UAAU,SACb,OAAJ5E,QAAI,IAAJA,OAAI,EAAJA,EAAMqF,QAERZ,GACCI,eAAA,OAAKD,UAAU,qBAAoB7D,SAAA,CACjC8D,eAACC,IAAI,CAACF,UAAU,gBAAgBG,GAAG,WAAUhE,SAAA,CAC3CiD,cAACsB,IAAK,CAACV,UAAU,SAAS,aAG5BC,eAAA,UACED,UAAU,gBACVO,QA/EGI,KACnB1C,IACA0B,EAAS,WA6E6BxD,SAAA,CAEtBiD,cAACwB,IAAY,CAACZ,UAAU,SAAS,6BCuDtCa,MA7IDA,KACZ,MAAOC,EAAUC,GAAehB,mBAAS,CACvC1C,MAAO,GACPC,SAAU,MAEL0D,EAAcC,GAAmBlB,oBAAS,IAC1CtE,EAASyF,GAAcnB,oBAAS,IAEjC,MAAE3C,GAAUkC,IACZK,EAAWC,cAEXuB,EAAgBC,IACpBL,EAAY,IACPD,EACH,CAACM,EAAEC,OAAOZ,MAAOW,EAAEC,OAAOlE,SA+B9B,OACEiC,cAAA,OAAKY,UAAU,2DAA0D7D,SACvEiD,cAAA,OAAKY,UAAU,oBAAmB7D,SAChCiD,cAAA,OAAKY,UAAU,OAAM7D,SACnB8D,eAAA,OAAKD,UAAU,gBAAe7D,SAAA,CAC5B8D,eAAA,OAAKD,UAAU,mBAAkB7D,SAAA,CAC/BiD,cAAA,MAAIY,UAAU,uBAAsB7D,SAAC,iBACrCiD,cAAA,KAAGY,UAAU,aAAY7D,SAAC,+BAG5B8D,eAAA,QAAMqB,SArCKzE,UACnBuE,EAAEG,iBACFL,GAAW,GAEX,IACE,MAAMM,QAAepE,EAAM0D,EAASzD,MAAOyD,EAASxD,UACpD,GAAIkE,EAAO9D,QAAS,CAAC,IAAD+D,EAClB3E,QAAQC,IAAI,mCACZD,QAAQC,IAAI,aAAcyE,EAAOpG,MAGjC,MAAMsG,EAAsB,QAAdD,EAAGD,EAAOpG,YAAI,IAAAqG,OAAA,EAAXA,EAAapB,KAE5BV,EADe,YAAb+B,EACO,WACa,YAAbA,EACA,WAEA,IAEb,CACF,CAAE,MAAOhG,GACPoB,QAAQpB,MAAM,eAAgBA,EAChC,CAAC,QACCwF,GAAW,EACb,GAaqC/E,SAAA,CAC3B8D,eAAA,OAAKD,UAAU,OAAM7D,SAAA,CACnBiD,cAAA,SAAOuC,QAAQ,QAAQ3B,UAAU,aAAY7D,SAAC,kBAG9C8D,eAAA,OAAKD,UAAU,cAAa7D,SAAA,CAC1BiD,cAAA,QAAMY,UAAU,mBAAkB7D,SAChCiD,cAACwC,IAAU,MAEbxC,cAAA,SACEtD,KAAK,QACLkE,UAAU,eACVI,GAAG,QACHK,KAAK,QACLtD,MAAO2D,EAASzD,MAChBwE,SAAUV,EACVW,UAAQ,EACRC,YAAY,2BAKlB9B,eAAA,OAAKD,UAAU,OAAM7D,SAAA,CACnBiD,cAAA,SAAOuC,QAAQ,WAAW3B,UAAU,aAAY7D,SAAC,aAGjD8D,eAAA,OAAKD,UAAU,cAAa7D,SAAA,CAC1BiD,cAAA,QAAMY,UAAU,mBAAkB7D,SAChCiD,cAAC4C,IAAM,MAET5C,cAAA,SACEtD,KAAMkF,EAAe,OAAS,WAC9BhB,UAAU,eACVI,GAAG,WACHK,KAAK,WACLtD,MAAO2D,EAASxD,SAChBuE,SAAUV,EACVW,UAAQ,EACRC,YAAY,wBAEd3C,cAAA,UACEtD,KAAK,SACLkE,UAAU,4BACVO,QAASA,IAAMU,GAAiBD,GAAc7E,SAE7C6E,EAAe5B,cAAC6C,IAAU,IAAM7C,cAAC8C,IAAK,YAK7C9C,cAAA,UACEtD,KAAK,SACLkE,UAAU,6BACVmC,SAAU1G,EAAQU,SAEjBV,EACCwE,eAAAK,WAAA,CAAAnE,SAAA,CACEiD,cAAA,QAAMY,UAAU,0CAA0C,mBAI5D,YAIJC,eAAA,OAAKD,UAAU,cAAa7D,SAAA,CAC1B8D,eAAA,KAAGD,UAAU,OAAM7D,SAAA,CAAC,yBACK,IACvBiD,cAACc,IAAI,CAACC,GAAG,YAAYH,UAAU,uBAAsB7D,SAAC,oBAIxDiD,cAAA,KAAGY,UAAU,YAAW7D,SACtBiD,cAACc,IAAI,CAACC,GAAG,mBAAmBH,UAAU,kCAAiC7D,SAAC,4CC0M3EiG,MA1UEA,KACf,MAAOtB,EAAUC,GAAehB,mBAAS,CACvCU,KAAM,GACNpD,MAAO,GACPgF,aAAc,GACd/E,SAAU,GACVgF,gBAAiB,GACjBjC,KAAM,UACNkC,UAAW,GACXC,WAAY,GACZC,KAAM,KAEDzB,EAAcC,GAAmBlB,oBAAS,IAC1C2C,EAAqBC,GAA0B5C,oBAAS,IACxDtE,EAASyF,GAAcnB,oBAAS,IAEjC,SAAEjC,GAAawB,IACfK,EAAWC,cAEXuB,EAAgBC,IACpBL,EAAY,IACPD,EACH,CAACM,EAAEC,OAAOZ,MAAOW,EAAEC,OAAOlE,SAyD9B,OACEiC,cAAA,OAAKY,UAAU,2DAA0D7D,SACvEiD,cAAA,OAAKY,UAAU,oBAAmB7D,SAChCiD,cAAA,OAAKY,UAAU,OAAM7D,SACnB8D,eAAA,OAAKD,UAAU,gBAAe7D,SAAA,CAC5B8D,eAAA,OAAKD,UAAU,mBAAkB7D,SAAA,CAC/BiD,cAAA,MAAIY,UAAU,uBAAsB7D,SAAC,mBACrCiD,cAAA,KAAGY,UAAU,aAAY7D,SAAC,qCAG5B8D,eAAA,QAAMqB,SA/DKzE,UAKnB,GAJAuE,EAAEG,iBACFL,GAAW,GAGPJ,EAASxD,WAAawD,EAASwB,gBAGjC,OAFAM,MAAM,+BACN1B,GAAW,GAKb,GAAIJ,EAASxD,SAASuF,OAAS,EAG7B,OAFAD,MAAM,oDACN1B,GAAW,GAMb,GAAIJ,EAASuB,eADO,cACsBS,KAAKhC,EAASuB,cAGtD,OAFAO,MAAM,gDACN1B,GAAW,GAIb,IACE,MAAM1D,EAAW,CACfiD,KAAMK,EAASL,KACfpD,MAAOyD,EAASzD,MAChBgF,aAAcvB,EAASuB,aACvB/E,SAAUwD,EAASxD,SACnB+C,KAAMS,EAAST,MAIK,YAAlBS,EAAST,OACX7C,EAAS+E,UAAYzB,EAASyB,UAC9B/E,EAASgF,WAAa1B,EAAS0B,WAC/BhF,EAASiF,KAAOM,SAASjC,EAAS2B,cAGf3E,EAASN,IACnBE,SACTiC,EAAS,IAEb,CAAE,MAAOjE,GACPoB,QAAQpB,MAAM,sBAAuBA,EACvC,CAAC,QACCwF,GAAW,EACb,GAaqC/E,SAAA,CAC3B8D,eAAA,OAAKD,UAAU,OAAM7D,SAAA,CACnBiD,cAAA,SAAOuC,QAAQ,OAAO3B,UAAU,aAAY7D,SAAC,SAG7C8D,eAAA,UACED,UAAU,cACVI,GAAG,OACHK,KAAK,OACLtD,MAAO2D,EAAST,KAChBwB,SAAUV,EACVW,UAAQ,EAAA3F,SAAA,CAERiD,cAAA,UAAQjC,MAAM,UAAShB,SAAC,YACxBiD,cAAA,UAAQjC,MAAM,UAAShB,SAAC,kBAI5B8D,eAAA,OAAKD,UAAU,MAAK7D,SAAA,CAClB8D,eAAA,OAAKD,UAAU,gBAAe7D,SAAA,CAC5BiD,cAAA,SAAOuC,QAAQ,OAAO3B,UAAU,aAAY7D,SAAC,cAG7C8D,eAAA,OAAKD,UAAU,cAAa7D,SAAA,CAC1BiD,cAAA,QAAMY,UAAU,mBAAkB7D,SAChCiD,cAACoB,IAAM,MAETpB,cAAA,SACEtD,KAAK,OACLkE,UAAU,eACVI,GAAG,OACHK,KAAK,OACLtD,MAAO2D,EAASL,KAChBoB,SAAUV,EACVW,UAAQ,EACRC,YAAY,+BAKlB9B,eAAA,OAAKD,UAAU,gBAAe7D,SAAA,CAC5BiD,cAAA,SAAOuC,QAAQ,QAAQ3B,UAAU,aAAY7D,SAAC,kBAG9C8D,eAAA,OAAKD,UAAU,cAAa7D,SAAA,CAC1BiD,cAAA,QAAMY,UAAU,mBAAkB7D,SAChCiD,cAACwC,IAAU,MAEbxC,cAAA,SACEtD,KAAK,QACLkE,UAAU,eACVI,GAAG,QACHK,KAAK,QACLtD,MAAO2D,EAASzD,MAChBwE,SAAUV,EACVW,UAAQ,EACRC,YAAY,8BAMpB9B,eAAA,OAAKD,UAAU,OAAM7D,SAAA,CACnBiD,cAAA,SAAOuC,QAAQ,eAAe3B,UAAU,aAAY7D,SAAC,kBAGrD8D,eAAA,OAAKD,UAAU,cAAa7D,SAAA,CAC1BiD,cAAA,QAAMY,UAAU,mBAAkB7D,SAChCiD,cAAC4D,IAAO,MAEV5D,cAAA,SACEtD,KAAK,MACLkE,UAAU,eACVI,GAAG,eACHK,KAAK,eACLtD,MAAO2D,EAASuB,aAChBR,SAAUV,EACVW,UAAQ,EACRC,YAAY,oCACZkB,UAAU,aAKhBhD,eAAA,OAAKD,UAAU,MAAK7D,SAAA,CAClB8D,eAAA,OAAKD,UAAU,gBAAe7D,SAAA,CAC5BiD,cAAA,SAAOuC,QAAQ,WAAW3B,UAAU,aAAY7D,SAAC,aAGjD8D,eAAA,OAAKD,UAAU,cAAa7D,SAAA,CAC1BiD,cAAA,QAAMY,UAAU,mBAAkB7D,SAChCiD,cAAC4C,IAAM,MAET5C,cAAA,SACEtD,KAAMkF,EAAe,OAAS,WAC9BhB,UAAU,eACVI,GAAG,WACHK,KAAK,WACLtD,MAAO2D,EAASxD,SAChBuE,SAAUV,EACVW,UAAQ,EACRC,YAAY,mBAEd3C,cAAA,UACEtD,KAAK,SACLkE,UAAU,4BACVO,QAASA,IAAMU,GAAiBD,GAAc7E,SAE7C6E,EAAe5B,cAAC6C,IAAU,IAAM7C,cAAC8C,IAAK,YAK7CjC,eAAA,OAAKD,UAAU,gBAAe7D,SAAA,CAC5BiD,cAAA,SAAOuC,QAAQ,kBAAkB3B,UAAU,aAAY7D,SAAC,qBAGxD8D,eAAA,OAAKD,UAAU,cAAa7D,SAAA,CAC1BiD,cAAA,QAAMY,UAAU,mBAAkB7D,SAChCiD,cAAC4C,IAAM,MAET5C,cAAA,SACEtD,KAAM4G,EAAsB,OAAS,WACrC1C,UAAU,eACVI,GAAG,kBACHK,KAAK,kBACLtD,MAAO2D,EAASwB,gBAChBT,SAAUV,EACVW,UAAQ,EACRC,YAAY,qBAEd3C,cAAA,UACEtD,KAAK,SACLkE,UAAU,4BACVO,QAASA,IAAMoC,GAAwBD,GAAqBvG,SAE3DuG,EAAsBtD,cAAC6C,IAAU,IAAM7C,cAAC8C,IAAK,eAMnC,YAAlBpB,EAAST,MACRjB,cAAAkB,WAAA,CAAAnE,SACE8D,eAAA,OAAKD,UAAU,MAAK7D,SAAA,CAClB8D,eAAA,OAAKD,UAAU,gBAAe7D,SAAA,CAC5BiD,cAAA,SAAOuC,QAAQ,YAAY3B,UAAU,aAAY7D,SAAC,eAGlD8D,eAAA,OAAKD,UAAU,cAAa7D,SAAA,CAC1BiD,cAAA,QAAMY,UAAU,mBAAkB7D,SAChCiD,cAAC8D,IAAQ,MAEX9D,cAAA,SACEtD,KAAK,OACLkE,UAAU,eACVI,GAAG,YACHK,KAAK,YACLtD,MAAO2D,EAASyB,UAChBV,SAAUV,EACVW,UAAQ,EACRC,YAAY,2BAKlB9B,eAAA,OAAKD,UAAU,gBAAe7D,SAAA,CAC5BiD,cAAA,SAAOuC,QAAQ,aAAa3B,UAAU,aAAY7D,SAAC,eAGnD8D,eAAA,OAAKD,UAAU,cAAa7D,SAAA,CAC1BiD,cAAA,QAAMY,UAAU,mBAAkB7D,SAChCiD,cAAC+D,IAAe,MAElB/D,cAAA,SACEtD,KAAK,OACLkE,UAAU,eACVI,GAAG,aACHK,KAAK,aACLtD,MAAO2D,EAAS0B,WAChBX,SAAUV,EACVW,UAAQ,EACRC,YAAY,2BAKlB9B,eAAA,OAAKD,UAAU,gBAAe7D,SAAA,CAC5BiD,cAAA,SAAOuC,QAAQ,OAAO3B,UAAU,aAAY7D,SAAC,SAG7C8D,eAAA,UACED,UAAU,cACVI,GAAG,OACHK,KAAK,OACLtD,MAAO2D,EAAS2B,KAChBZ,SAAUV,EACVW,UAAQ,EAAA3F,SAAA,CAERiD,cAAA,UAAQjC,MAAO,EAAEhB,SAAC,aAClBiD,cAAA,UAAQjC,MAAO,EAAEhB,SAAC,aAClBiD,cAAA,UAAQjC,MAAO,EAAEhB,SAAC,aAClBiD,cAAA,UAAQjC,MAAO,EAAEhB,SAAC,aAClBiD,cAAA,UAAQjC,MAAO,EAAEhB,SAAC,wBAO5BiD,cAAA,UACEtD,KAAK,SACLkE,UAAU,6BACVmC,SAAU1G,EAAQU,SAEjBV,EACCwE,eAAAK,WAAA,CAAAnE,SAAA,CACEiD,cAAA,QAAMY,UAAU,0CAA0C,yBAI5D,mBAIJZ,cAAA,OAAKY,UAAU,cAAa7D,SAC1B8D,eAAA,KAAGD,UAAU,OAAM7D,SAAA,CAAC,2BACO,IACzBiD,cAACc,IAAI,CAACC,GAAG,SAASH,UAAU,uBAAsB7D,SAAC,mCCxMtDiH,MApHQA,KACrB,MAAO/F,EAAOgG,GAAYtD,mBAAS,KAC5BtE,EAASyF,GAAcnB,oBAAS,IAChCuD,EAAWC,GAAgBxD,oBAAS,GAqB3C,OAAIuD,EAEAlE,cAAA,OAAKY,UAAU,2DAA0D7D,SACvEiD,cAAA,OAAKY,UAAU,oBAAmB7D,SAChCiD,cAAA,OAAKY,UAAU,OAAM7D,SACnB8D,eAAA,OAAKD,UAAU,4BAA2B7D,SAAA,CACxCiD,cAAA,OAAKY,UAAU,OAAM7D,SACnBiD,cAACwC,IAAU,CAAC5B,UAAU,eAAewD,MAAO,CAAEC,SAAU,YAE1DrE,cAAA,MAAIY,UAAU,4BAA2B7D,SAAC,qBAC1C8D,eAAA,KAAGD,UAAU,kBAAiB7D,SAAA,CAAC,uCACOiD,cAAA,UAAAjD,SAASkB,OAE/C+B,cAAA,KAAGY,UAAU,wBAAuB7D,SAAC,qEAGrCiD,cAAA,UACEY,UAAU,+BACVO,QAASA,IAAMgD,GAAa,GAAOpH,SACpC,cAGDiD,cAACc,IAAI,CAACC,GAAG,SAASH,UAAU,kBAAiB7D,SAAC,2BAWxDiD,cAAA,OAAKY,UAAU,2DAA0D7D,SACvEiD,cAAA,OAAKY,UAAU,oBAAmB7D,SAChCiD,cAAA,OAAKY,UAAU,OAAM7D,SACnB8D,eAAA,OAAKD,UAAU,gBAAe7D,SAAA,CAC5B8D,eAAA,OAAKD,UAAU,mBAAkB7D,SAAA,CAC/BiD,cAAA,MAAIY,UAAU,uBAAsB7D,SAAC,oBACrCiD,cAAA,KAAGY,UAAU,aAAY7D,SAAC,+CAG5B8D,eAAA,QAAMqB,SA7DKzE,UACnBuE,EAAEG,iBACFL,GAAW,GAEX,WACyB3E,IAAMgB,KAAK,4BAA6B,CAAEF,WAEpDrB,KAAK0B,UAChB6F,GAAa,GACb9F,IAAMC,QAAQ,2CAElB,CAAE,MAAOhC,GAAQ,IAADiC,EAAAC,EACd,MAAMC,GAAwB,QAAdF,EAAAjC,EAAMsB,gBAAQ,IAAAW,GAAM,QAANC,EAAdD,EAAgB3B,YAAI,IAAA4B,OAAN,EAAdA,EAAsBC,UAAW,6BACjDJ,IAAM/B,MAAMmC,EACd,CAAC,QACCqD,GAAW,EACb,GA6CqC/E,SAAA,CAC3B8D,eAAA,OAAKD,UAAU,OAAM7D,SAAA,CACnBiD,cAAA,SAAOuC,QAAQ,QAAQ3B,UAAU,aAAY7D,SAAC,kBAG9C8D,eAAA,OAAKD,UAAU,cAAa7D,SAAA,CAC1BiD,cAAA,QAAMY,UAAU,mBAAkB7D,SAChCiD,cAACwC,IAAU,MAEbxC,cAAA,SACEtD,KAAK,QACLkE,UAAU,eACVI,GAAG,QACHjD,MAAOE,EACPwE,SAAWT,GAAMiC,EAASjC,EAAEC,OAAOlE,OACnC2E,UAAQ,EACRC,YAAY,2BAKlB3C,cAAA,UACEtD,KAAK,SACLkE,UAAU,6BACVmC,SAAU1G,EAAQU,SAEjBV,EACCwE,eAAAK,WAAA,CAAAnE,SAAA,CACEiD,cAAA,QAAMY,UAAU,0CAA0C,gBAI5D,oBAIJZ,cAAA,OAAKY,UAAU,cAAa7D,SAC1B8D,eAACC,IAAI,CAACC,GAAG,SAASH,UAAU,uBAAsB7D,SAAA,CAChDiD,cAACsE,IAAW,CAAC1D,UAAU,SAAS,kCCiInC2D,MAzOOA,KACpB,MAAO7C,EAAUC,GAAehB,mBAAS,CACvCzC,SAAU,GACVgF,gBAAiB,MAEZtB,EAAcC,GAAmBlB,oBAAS,IAC1C2C,EAAqBC,GAA0B5C,oBAAS,IACxDtE,EAASyF,GAAcnB,oBAAS,IAChC6D,EAAYC,GAAiB9D,oBAAS,IACtC+D,EAAYC,GAAiBhE,oBAAS,IACtCrC,EAASsG,GAAcjE,oBAAS,IAEjC,MAAE1E,GAAU4I,cACZtE,EAAWC,cAEjBtD,oBAAU,KACR4H,KACC,CAAC7I,IAEJ,MAAM6I,EAAgBrH,UACpB,WACyBN,IAAMU,IAAI,4BAA4B5B,MAChDW,KAAK0B,SAChBqG,GAAc,EAElB,CAAE,MAAOrI,GACPqI,GAAc,GACdtG,IAAM/B,MAAM,gCACd,CAAC,QACCmI,GAAc,EAChB,GAGI1C,EAAgBC,IACpBL,EAAY,IACPD,EACH,CAACM,EAAEC,OAAOZ,MAAOW,EAAEC,OAAOlE,SA0C9B,OAAIyG,EAEAxE,cAAA,OAAKY,UAAU,2DAA0D7D,SACvEiD,cAAA,OAAKY,UAAU,oBAAmB7D,SAChCiD,cAAA,OAAKY,UAAU,OAAM7D,SACnB8D,eAAA,OAAKD,UAAU,4BAA2B7D,SAAA,CACxCiD,cAAA,OAAKY,UAAU,8BAA8BK,KAAK,SAAQlE,SACxDiD,cAAA,QAAMY,UAAU,kBAAiB7D,SAAC,iBAEpCiD,cAAA,KAAGY,UAAU,kBAAiB7D,SAAC,sCAQtC2H,EAoBDpG,EAEA0B,cAAA,OAAKY,UAAU,2DAA0D7D,SACvEiD,cAAA,OAAKY,UAAU,oBAAmB7D,SAChCiD,cAAA,OAAKY,UAAU,OAAM7D,SACnB8D,eAAA,OAAKD,UAAU,4BAA2B7D,SAAA,CACxCiD,cAAA,OAAKY,UAAU,OAAM7D,SACnBiD,cAAC+E,IAAO,CAACnE,UAAU,eAAewD,MAAO,CAAEC,SAAU,YAEvDrE,cAAA,MAAIY,UAAU,4BAA2B7D,SAAC,iCAC1CiD,cAAA,KAAGY,UAAU,kBAAiB7D,SAAC,6EAG/BiD,cAACc,IAAI,CAACC,GAAG,SAASH,UAAU,kBAAiB7D,SAAC,yBAWxDiD,cAAA,OAAKY,UAAU,2DAA0D7D,SACvEiD,cAAA,OAAKY,UAAU,oBAAmB7D,SAChCiD,cAAA,OAAKY,UAAU,OAAM7D,SACnB8D,eAAA,OAAKD,UAAU,gBAAe7D,SAAA,CAC5B8D,eAAA,OAAKD,UAAU,mBAAkB7D,SAAA,CAC/BiD,cAAA,MAAIY,UAAU,uBAAsB7D,SAAC,mBACrCiD,cAAA,KAAGY,UAAU,aAAY7D,SAAC,+BAG5B8D,eAAA,QAAMqB,SA5GKzE,UAKnB,GAJAuE,EAAEG,iBACFL,GAAW,GAGPJ,EAASxD,WAAawD,EAASwB,gBAGjC,OAFA7E,IAAM/B,MAAM,+BACZwF,GAAW,GAKb,GAAIJ,EAASxD,SAASuF,OAAS,EAG7B,OAFApF,IAAM/B,MAAM,oDACZwF,GAAW,GAIb,WACyB3E,IAAMgB,KAAK,4BAA4BlC,IAAS,CACrEiC,SAAUwD,EAASxD,YAGRtB,KAAK0B,UAChBsG,GAAW,GACXvG,IAAMC,QAAQ,gCACdY,WAAW,KACTqB,EAAS,WACR,KAEP,CAAE,MAAOjE,GAAQ,IAADiC,EAAAC,EACd,MAAMC,GAAwB,QAAdF,EAAAjC,EAAMsB,gBAAQ,IAAAW,GAAM,QAANC,EAAdD,EAAgB3B,YAAI,IAAA4B,OAAN,EAAdA,EAAsBC,UAAW,2BACjDJ,IAAM/B,MAAMmC,EACd,CAAC,QACCqD,GAAW,EACb,GAyEqC/E,SAAA,CAC3B8D,eAAA,OAAKD,UAAU,OAAM7D,SAAA,CACnBiD,cAAA,SAAOuC,QAAQ,WAAW3B,UAAU,aAAY7D,SAAC,iBAGjD8D,eAAA,OAAKD,UAAU,cAAa7D,SAAA,CAC1BiD,cAAA,QAAMY,UAAU,mBAAkB7D,SAChCiD,cAAC4C,IAAM,MAET5C,cAAA,SACEtD,KAAMkF,EAAe,OAAS,WAC9BhB,UAAU,eACVI,GAAG,WACHK,KAAK,WACLtD,MAAO2D,EAASxD,SAChBuE,SAAUV,EACVW,UAAQ,EACRC,YAAY,uBAEd3C,cAAA,UACEtD,KAAK,SACLkE,UAAU,4BACVO,QAASA,IAAMU,GAAiBD,GAAc7E,SAE7C6E,EAAe5B,cAAC6C,IAAU,IAAM7C,cAAC8C,IAAK,YAK7CjC,eAAA,OAAKD,UAAU,OAAM7D,SAAA,CACnBiD,cAAA,SAAOuC,QAAQ,kBAAkB3B,UAAU,aAAY7D,SAAC,yBAGxD8D,eAAA,OAAKD,UAAU,cAAa7D,SAAA,CAC1BiD,cAAA,QAAMY,UAAU,mBAAkB7D,SAChCiD,cAAC4C,IAAM,MAET5C,cAAA,SACEtD,KAAM4G,EAAsB,OAAS,WACrC1C,UAAU,eACVI,GAAG,kBACHK,KAAK,kBACLtD,MAAO2D,EAASwB,gBAChBT,SAAUV,EACVW,UAAQ,EACRC,YAAY,yBAEd3C,cAAA,UACEtD,KAAK,SACLkE,UAAU,4BACVO,QAASA,IAAMoC,GAAwBD,GAAqBvG,SAE3DuG,EAAsBtD,cAAC6C,IAAU,IAAM7C,cAAC8C,IAAK,YAKpD9C,cAAA,UACEtD,KAAK,SACLkE,UAAU,6BACVmC,SAAU1G,EAAQU,SAEjBV,EACCwE,eAAAK,WAAA,CAAAnE,SAAA,CACEiD,cAAA,QAAMY,UAAU,0CAA0C,2BAI5D,mBAIJZ,cAAA,OAAKY,UAAU,cAAa7D,SAC1BiD,cAACc,IAAI,CAACC,GAAG,SAASH,UAAU,uBAAsB7D,SAAC,gCA5H7DiD,cAAA,OAAKY,UAAU,2DAA0D7D,SACvEiD,cAAA,OAAKY,UAAU,oBAAmB7D,SAChCiD,cAAA,OAAKY,UAAU,OAAM7D,SACnB8D,eAAA,OAAKD,UAAU,4BAA2B7D,SAAA,CACxCiD,cAAA,MAAIY,UAAU,2BAA0B7D,SAAC,uBACzCiD,cAAA,KAAGY,UAAU,kBAAiB7D,SAAC,wDAG/BiD,cAACc,IAAI,CAACC,GAAG,mBAAmBH,UAAU,kBAAiB7D,SAAC,qCCoGvDiI,MA9MOA,KACpB,MAAOC,EAAOC,GAAYvE,mBAAS,CACjCwE,gBAAiB,EACjBC,cAAe,EACfC,cAAe,EACfC,eAAgB,MAEXjJ,EAASyF,GAAcnB,oBAAS,GAEvCzD,oBAAU,KACRqI,KACC,IAEH,MAAMA,EAAsB9H,UAC1B,IACE,MAAM+H,GAAQ,IAAIC,MAAOC,cAAcC,MAAM,KAAK,GAI5CC,SAD2BzI,IAAMU,IAAI,8BAA8B2H,MAC/B5I,KAAKA,KAIzCwI,SADmBjI,IAAMU,IAAI,mBACFjB,KAAKiJ,MAIhCR,SADyBlI,IAAMU,IAAI,uBACFjB,KAAKiJ,MAE5CX,EAAS,CACPC,gBAAiBS,EAAeX,MAAMa,MACtCV,gBACAC,gBACAC,eAAgBM,EAAeG,WAAWC,MAAM,EAAG,IAEvD,CAAE,MAAO1J,GACPoB,QAAQpB,MAAM,kCAAmCA,EACnD,CAAC,QACCwF,GAAW,EACb,GAGF,OAAIzF,EAEA2D,cAAA,OAAKY,UAAU,kBAAiB7D,SAC9BiD,cAAA,OAAKY,UAAU,iBAAiBK,KAAK,SAAQlE,SAC3CiD,cAAA,QAAMY,UAAU,kBAAiB7D,SAAC,mBAOxC8D,eAAA,OAAA9D,SAAA,CACEiD,cAAA,OAAKY,UAAU,WAAU7D,SACvB8D,eAAA,OAAKD,UAAU,SAAQ7D,SAAA,CACrBiD,cAAA,MAAIY,UAAU,qBAAoB7D,SAAC,sBACnCiD,cAAA,KAAGY,UAAU,gBAAe7D,SAAC,uDAKjC8D,eAAA,OAAKD,UAAU,WAAU7D,SAAA,CACvBiD,cAAA,OAAKY,UAAU,gBAAe7D,SAC5B8D,eAAA,OAAKD,UAAU,aAAY7D,SAAA,CACzBiD,cAAA,OAAKY,UAAU,eAAc7D,SAAEkI,EAAME,kBACrCnF,cAAA,OAAKY,UAAU,cAAa7D,SAAC,4BAGjCiD,cAAA,OAAKY,UAAU,gBAAe7D,SAC5B8D,eAAA,OAAKD,UAAU,aAAY7D,SAAA,CACzBiD,cAAA,OAAKY,UAAU,eAAc7D,SAAEkI,EAAMG,gBACrCpF,cAAA,OAAKY,UAAU,cAAa7D,SAAC,yBAGjCiD,cAAA,OAAKY,UAAU,gBAAe7D,SAC5B8D,eAAA,OAAKD,UAAU,aAAY7D,SAAA,CACzBiD,cAAA,OAAKY,UAAU,eAAc7D,SAAEkI,EAAMI,gBACrCrF,cAAA,OAAKY,UAAU,cAAa7D,SAAC,wBAGjCiD,cAAA,OAAKY,UAAU,gBAAe7D,SAC5B8D,eAAA,OAAKD,UAAU,aAAY7D,SAAA,CACzB8D,eAAA,OAAKD,UAAU,eAAc7D,SAAA,CAC1BkI,EAAMI,cAAgB,EACnBY,KAAKC,MAAOjB,EAAME,gBAAkBF,EAAMI,cAAiB,KAC3D,EAAE,OAERrF,cAAA,OAAKY,UAAU,cAAa7D,SAAC,4BAMnCiD,cAAA,OAAKY,UAAU,WAAU7D,SACvBiD,cAAA,OAAKY,UAAU,SAAQ7D,SACrBiD,cAAA,OAAKY,UAAU,OAAM7D,SACnB8D,eAAA,OAAKD,UAAU,YAAW7D,SAAA,CACxBiD,cAAA,MAAIY,UAAU,kBAAiB7D,SAAC,kBAChC8D,eAAA,OAAKD,UAAU,MAAK7D,SAAA,CAClBiD,cAAA,OAAKY,UAAU,gBAAe7D,SAC5BiD,cAACc,IAAI,CAACC,GAAG,uBAAuBH,UAAU,uBAAsB7D,SAC9DiD,cAAA,OAAKY,UAAU,yBAAwB7D,SACrC8D,eAAA,OAAKD,UAAU,YAAW7D,SAAA,CACxBiD,cAACmG,IAAQ,CAACvF,UAAU,oBAAoBwF,KAAM,KAC9CpG,cAAA,MAAIY,UAAU,aAAY7D,SAAC,qBAC3BiD,cAAA,KAAGY,UAAU,uBAAsB7D,SAAC,iDAK5CiD,cAAA,OAAKY,UAAU,gBAAe7D,SAC5BiD,cAACc,IAAI,CAACC,GAAG,sBAAsBH,UAAU,uBAAsB7D,SAC7DiD,cAAA,OAAKY,UAAU,yBAAwB7D,SACrC8D,eAAA,OAAKD,UAAU,YAAW7D,SAAA,CACxBiD,cAACqG,IAAO,CAACzF,UAAU,oBAAoBwF,KAAM,KAC7CpG,cAAA,MAAIY,UAAU,aAAY7D,SAAC,oBAC3BiD,cAAA,KAAGY,UAAU,uBAAsB7D,SAAC,8CAK5CiD,cAAA,OAAKY,UAAU,gBAAe7D,SAC5BiD,cAACc,IAAI,CAACC,GAAG,sBAAsBH,UAAU,uBAAsB7D,SAC7DiD,cAAA,OAAKY,UAAU,yBAAwB7D,SACrC8D,eAAA,OAAKD,UAAU,YAAW7D,SAAA,CACxBiD,cAACsG,IAAU,CAAC1F,UAAU,oBAAoBwF,KAAM,KAChDpG,cAAA,MAAIY,UAAU,aAAY7D,SAAC,cAC3BiD,cAAA,KAAGY,UAAU,uBAAsB7D,SAAC,wCAK5CiD,cAAA,OAAKY,UAAU,gBAAe7D,SAC5BiD,cAACc,IAAI,CAACC,GAAG,sBAAsBH,UAAU,uBAAsB7D,SAC7DiD,cAAA,OAAKY,UAAU,yBAAwB7D,SACrC8D,eAAA,OAAKD,UAAU,YAAW7D,SAAA,CACxBiD,cAACuG,IAAa,CAAC3F,UAAU,iBAAiBwF,KAAM,KAChDpG,cAAA,MAAIY,UAAU,aAAY7D,SAAC,YAC3BiD,cAAA,KAAGY,UAAU,uBAAsB7D,SAAC,sDAYtDiD,cAAA,OAAKY,UAAU,MAAK7D,SAClBiD,cAAA,OAAKY,UAAU,SAAQ7D,SACrBiD,cAAA,OAAKY,UAAU,OAAM7D,SACnB8D,eAAA,OAAKD,UAAU,YAAW7D,SAAA,CACxBiD,cAAA,MAAIY,UAAU,kBAAiB7D,SAAC,oBAC/BkI,EAAMK,eAAe7B,OAAS,EAC7BzD,cAAA,OAAKY,UAAU,mBAAkB7D,SAC/B8D,eAAA,SAAOD,UAAU,oBAAmB7D,SAAA,CAClCiD,cAAA,SAAAjD,SACE8D,eAAA,MAAA9D,SAAA,CACEiD,cAAA,MAAAjD,SAAI,YACJiD,cAAA,MAAAjD,SAAI,kBACJiD,cAAA,MAAAjD,SAAI,gBACJiD,cAAA,MAAAjD,SAAI,gBACJiD,cAAA,MAAAjD,SAAI,cAGRiD,cAAA,SAAAjD,SACGkI,EAAMK,eAAekB,IAAKC,IAAM,IAAAC,EAAA,OAC/B7F,eAAA,MAAA9D,SAAA,CACE8D,eAAA,MAAA9D,SAAA,CACEiD,cAAA,UAAAjD,SAAS0J,EAAOE,QAAQtF,OACxBrB,cAAA,SACAA,cAAA,SAAOY,UAAU,aAAY7D,SAAE0J,EAAOE,QAAQxD,eAEhDnD,cAAA,MAAAjD,SAAK0J,EAAOE,QAAQ1D,eACpBjD,cAAA,MAAAjD,UAAkB,QAAb2J,EAAAD,EAAOG,cAAM,IAAAF,OAAA,EAAbA,EAAeG,cAAe,QACnC7G,cAAA,MAAAjD,SACG0J,EAAOK,aAAeL,EAAOK,YAAYC,UAAYN,EAAOK,YAAYE,UACvEnG,eAAA,SAAOD,UAAU,aAAY7D,SAAA,CAC1B0J,EAAOK,YAAYC,SAASE,QAAQ,GAAG,KAAGR,EAAOK,YAAYE,UAAUC,QAAQ,MAGlFjH,cAAA,SAAOY,UAAU,aAAY7D,SAAC,UAGlCiD,cAAA,MAAAjD,SACG,IAAI0I,KAAKgB,EAAOS,UAAUC,yBAlBtBV,EAAOW,cA0BxBpH,cAAA,KAAGY,UAAU,yBAAwB7D,SAAC,oCCyGvCsK,MA5SKA,KAClB,MAAM,KAAErL,EAAI,gBAAEI,EAAe,MAAEH,GAAUiE,KAClCwB,EAAUC,GAAehB,mBAAS,CACvCkG,YAAa,GACbzH,SAAU,GACVkI,OAAQ,GACRC,gBAAiB,MAEZC,EAAaC,GAAkB9G,mBAAS,OACxCtE,EAASyF,GAAcnB,oBAAS,GAEjCoB,EAAgBC,IACpBL,EAAY,IACPD,EACH,CAACM,EAAEC,OAAOZ,MAAOW,EAAEC,OAAOlE,SA4E9B,OARAL,QAAQC,IAAI,6BAA8B,CACxCvB,kBACAJ,OACAC,MAAOA,EAAQ,UAAY,UAC3BqG,SAAc,OAAJtG,QAAI,IAAJA,OAAI,EAAJA,EAAMiF,OAIb7E,GAAoBJ,EAYrBA,GAAsB,YAAdA,EAAKiF,KAEbjB,cAAA,OAAKY,UAAU,6BAA4B7D,SACzCiD,cAAA,OAAKY,UAAU,WAAU7D,SACvBiD,cAAA,OAAKY,UAAU,OAAM7D,SACnB8D,eAAA,OAAKD,UAAU,wBAAuB7D,SAAA,CACpCiD,cAAA,MAAIY,UAAU,cAAa7D,SAAC,kBAC5BiD,cAAA,KAAAjD,SAAG,kDASb8D,eAAA,OAAA9D,SAAA,CACEiD,cAAA,OAAKY,UAAU,WAAU7D,SACvB8D,eAAA,OAAKD,UAAU,SAAQ7D,SAAA,CACrBiD,cAAA,MAAIY,UAAU,qBAAoB7D,SAAC,qBACnCiD,cAAA,KAAGY,UAAU,gBAAe7D,SAAC,qDAIjC8D,eAAA,OAAKD,UAAU,MAAK7D,SAAA,CAClBiD,cAAA,OAAKY,UAAU,WAAU7D,SACvBiD,cAAA,OAAKY,UAAU,OAAM7D,SACnB8D,eAAA,OAAKD,UAAU,YAAW7D,SAAA,CACxBiD,cAAA,MAAIY,UAAU,kBAAiB7D,SAAC,qBAChC8D,eAAA,QAAMqB,SAjHCzE,UAKjB,GAJAuE,EAAEG,iBACFL,GAAW,IAGN1F,IAAoBH,EAGvB,OAFAoC,IAAM/B,MAAM,mDACZwF,GAAW,GAKb,GAAmB,aAAX,OAAJ9F,QAAI,IAAJA,OAAI,EAAJA,EAAMiF,MAGR,OAFA5C,IAAM/B,MAAM,4CACZwF,GAAW,GAIbpE,QAAQC,IAAI,iCAAkC1B,EAAQ,UAAY,WAClEyB,QAAQC,IAAI,QAAS3B,GACrB0B,QAAQC,IAAI,iBAAkBR,IAAMC,SAASC,QAAQC,QAErD,IACE,MAAMM,QAAiBT,IAAMgB,KAAK,mBAAoBuD,GACtD+F,EAAe7J,EAAShB,KAAKA,MAC7ByB,IAAMC,QAAQ,kCAChB,CAAE,MAAOhC,GAAQ,IAADiC,EAAAC,EACdd,QAAQpB,MAAM,uBAAwBA,GACtC,MAAMmC,GAAwB,QAAdF,EAAAjC,EAAMsB,gBAAQ,IAAAW,GAAM,QAANC,EAAdD,EAAgB3B,YAAI,IAAA4B,OAAN,EAAdA,EAAsBC,UAAW,6BACjDJ,IAAM/B,MAAMmC,EACd,CAAC,QACCqD,GAAW,EACb,GAiFqC/E,SAAA,CACzB8D,eAAA,OAAKD,UAAU,OAAM7D,SAAA,CACnBiD,cAAA,SAAOuC,QAAQ,cAAc3B,UAAU,aAAY7D,SAAC,gBAGpDiD,cAAA,SACEtD,KAAK,OACLkE,UAAU,eACVI,GAAG,cACHK,KAAK,cACLtD,MAAO2D,EAASmF,YAChBpE,SAAUV,EACVY,YAAY,sCAIhB9B,eAAA,OAAKD,UAAU,OAAM7D,SAAA,CACnBiD,cAAA,SAAOuC,QAAQ,WAAW3B,UAAU,aAAY7D,SAAC,aAGjDiD,cAAA,SACEtD,KAAK,OACLkE,UAAU,eACVI,GAAG,WACHK,KAAK,WACLtD,MAAO2D,EAAStC,SAChBqD,SAAUV,EACVY,YAAY,sBAIhB9B,eAAA,OAAKD,UAAU,OAAM7D,SAAA,CACnBiD,cAAA,SAAOuC,QAAQ,SAAS3B,UAAU,aAAY7D,SAAC,mBAG/CiD,cAAA,SACEtD,KAAK,OACLkE,UAAU,eACVI,GAAG,SACHK,KAAK,SACLtD,MAAO2D,EAAS4F,OAChB7E,SAAUV,EACVY,YAAY,8BAIhB9B,eAAA,OAAKD,UAAU,OAAM7D,SAAA,CACnBiD,cAAA,SAAOuC,QAAQ,kBAAkB3B,UAAU,aAAY7D,SAAC,uBAGxD8D,eAAA,OAAKD,UAAU,cAAa7D,SAAA,CAC1BiD,cAAA,QAAMY,UAAU,mBAAkB7D,SAChCiD,cAAC0H,IAAO,MAEV1H,cAAA,SACEtD,KAAK,SACLkE,UAAU,eACVI,GAAG,kBACHK,KAAK,kBACLtD,MAAO2D,EAAS6F,gBAChB9E,SAAUV,EACV4F,IAAI,IACJC,IAAI,UAGR5H,cAAA,SAAOY,UAAU,aAAY7D,SAAC,2CAKhCiD,cAAA,UACEtD,KAAK,SACLkE,UAAU,wBACVmC,SAAU1G,EAAQU,SAEjBV,EACCwE,eAAAK,WAAA,CAAAnE,SAAA,CACEiD,cAAA,QAAMY,UAAU,0CAA0C,2BAI5DC,eAAAK,WAAA,CAAAnE,SAAA,CACEiD,cAACmG,IAAQ,CAACvF,UAAU,SAAS,kCAU3CZ,cAAA,OAAKY,UAAU,WAAU7D,SACvBiD,cAAA,OAAKY,UAAU,OAAM7D,SACnB8D,eAAA,OAAKD,UAAU,YAAW7D,SAAA,CACxBiD,cAAA,MAAIY,UAAU,kBAAiB7D,SAAC,sBAE/ByK,EACC3G,eAAA,OAAKD,UAAU,cAAa7D,SAAA,CAC1BiD,cAAA,OAAKY,UAAU,oBAAmB7D,SAChCiD,cAAA,OACE6H,IAAKL,EAAYM,YACjBC,IAAI,UACJnH,UAAU,YACVwD,MAAO,CAAE4D,SAAU,aAIvBnH,eAAA,OAAKD,UAAU,OAAM7D,SAAA,CACnBiD,cAAA,UAAAjD,SAAQ,UAAc,IAAEyK,EAAYS,QAGtCpH,eAAA,OAAKD,UAAU,OAAM7D,SAAA,CACnBiD,cAAA,UAAAjD,SAAQ,aAAiB,IAAE,IAAI0I,KAAK+B,EAAYU,WAAWC,oBAG7DtH,eAAA,OAAKD,UAAU,eAAc7D,SAAA,CAC3B8D,eAAA,UACED,UAAU,0BACVO,QArMIiH,KAClBZ,IACFa,UAAUC,UAAUC,UAAUf,EAAYS,MAC1C5J,IAAMC,QAAQ,kCAkM2BvB,SAAA,CAEzBiD,cAACwI,IAAM,CAAC5H,UAAU,SAAS,eAG7BC,eAAA,UACED,UAAU,0BACVO,QArMDsH,KACjB,GAAIjB,EAAa,CACf,MAAMkB,EAASC,SAASC,cAAc,UAChCC,EAAMH,EAAOI,WAAW,MACxBC,EAAM,IAAIC,MAEhBD,EAAIE,OAAS,KACXP,EAAOQ,MAAQH,EAAIG,MACnBR,EAAOS,OAASJ,EAAII,OACpBN,EAAIO,UAAUL,EAAK,EAAG,GAEtB,MAAMM,EAAOV,SAASC,cAAc,KACpCS,EAAKC,SAAW,WAAW9B,EAAYS,WACvCoB,EAAKE,KAAOb,EAAOc,YACnBH,EAAKI,SAGPV,EAAIlB,IAAML,EAAYM,WACxB,GAmLsC/K,SAAA,CAEpBiD,cAAC0J,IAAU,CAAC9I,UAAU,SAAS,uBAMrCC,eAAA,OAAKD,UAAU,yBAAwB7D,SAAA,CACrCiD,cAACmG,IAAQ,CAACC,KAAM,IAAKxF,UAAU,SAC/BZ,cAAA,KAAAjD,SAAG,mDAQdyK,GACCxH,cAAA,OAAKY,UAAU,WAAU7D,SACvBiD,cAAA,OAAKY,UAAU,SAAQ7D,SACrBiD,cAAA,OAAKY,UAAU,OAAM7D,SACnB8D,eAAA,OAAKD,UAAU,YAAW7D,SAAA,CACxBiD,cAAA,MAAIY,UAAU,kBAAiB7D,SAAC,oBAChC8D,eAAA,OAAKD,UAAU,MAAK7D,SAAA,CAClB8D,eAAA,OAAKD,UAAU,WAAU7D,SAAA,CACvB8D,eAAA,KAAA9D,SAAA,CAAGiD,cAAA,UAAAjD,SAAQ,iBAAqB,IAAEyK,EAAYX,eAC9ChG,eAAA,KAAA9D,SAAA,CAAGiD,cAAA,UAAAjD,SAAQ,cAAkB,IAAEyK,EAAYpI,eAE7CyB,eAAA,OAAKD,UAAU,WAAU7D,SAAA,CACvB8D,eAAA,KAAA9D,SAAA,CAAGiD,cAAA,UAAAjD,SAAQ,oBAAwB,IAAEyK,EAAYF,UACjDzG,eAAA,KAAA9D,SAAA,CAAGiD,cAAA,UAAAjD,SAAQ,eAAmB,IAAE,IAAI0I,KAAK+B,EAAYmC,aAAaxB,sCApMhFtH,eAAA,OAAKD,UAAU,kBAAiB7D,SAAA,CAC9BiD,cAAA,OAAKY,UAAU,iBAAiBK,KAAK,SAAQlE,SAC3CiD,cAAA,QAAMY,UAAU,kBAAiB7D,SAAC,iBAEpCiD,cAAA,KAAGY,UAAU,kBAAiB7D,SAAC,mCCmGxB6M,MApMQA,KACrB,MAAO7D,EAAY8D,GAAiBlJ,mBAAS,KACtCsE,EAAOC,GAAYvE,mBAAS,CAAC,IAC7BmJ,EAAcC,GAAmBpJ,oBAAS,IAAI8E,MAAOC,cAAcC,MAAM,KAAK,KAC9EtJ,EAASyF,GAAcnB,oBAAS,GAEjCqJ,EAAkBC,sBAAYxM,UAClC,IACEqE,GAAW,GACX,MAAMlE,QAAiBT,IAAMU,IAAI,8BAA8BiM,KAC/DD,EAAcjM,EAAShB,KAAKA,KAAKmJ,YACjCb,EAAStH,EAAShB,KAAKA,KAAKqI,MAC9B,CAAE,MAAO3I,GACPoB,QAAQpB,MAAM,6BAA8BA,GAC5C+B,IAAM/B,MAAM,kCACd,CAAC,QACCwF,GAAW,EACb,GACC,CAACgI,IAEJ5M,oBAAU,KACR8M,KACC,CAACA,IAeJ,OAAI3N,EAEA2D,cAAA,OAAKY,UAAU,kBAAiB7D,SAC9BiD,cAAA,OAAKY,UAAU,iBAAiBK,KAAK,SAAQlE,SAC3CiD,cAAA,QAAMY,UAAU,kBAAiB7D,SAAC,mBAOxC8D,eAAA,OAAA9D,SAAA,CACEiD,cAAA,OAAKY,UAAU,WAAU7D,SACvB8D,eAAA,OAAKD,UAAU,SAAQ7D,SAAA,CACrBiD,cAAA,MAAIY,UAAU,qBAAoB7D,SAAC,oBACnCiD,cAAA,KAAGY,UAAU,gBAAe7D,SAAC,4CAKjCiD,cAAA,OAAKY,UAAU,WAAU7D,SACvBiD,cAAA,OAAKY,UAAU,WAAU7D,SACvBiD,cAAA,OAAKY,UAAU,OAAM7D,SACnB8D,eAAA,OAAKD,UAAU,YAAW7D,SAAA,CACxB8D,eAAA,SAAO0B,QAAQ,OAAO3B,UAAU,aAAY7D,SAAA,CAC1CiD,cAACuG,IAAa,CAAC3F,UAAU,SAAS,iBAGpCZ,cAAA,SACEtD,KAAK,OACLkE,UAAU,eACVI,GAAG,OACHjD,MAAO+L,EACPrH,SAAWT,GAAM+H,EAAgB/H,EAAEC,OAAOlE,kBAQpD8C,eAAA,OAAKD,UAAU,WAAU7D,SAAA,CACvBiD,cAAA,OAAKY,UAAU,gBAAe7D,SAC5B8D,eAAA,OAAKD,UAAU,aAAY7D,SAAA,CACzBiD,cAAA,OAAKY,UAAU,eAAc7D,SAAEkI,EAAMa,OAAS,IAC9C9F,cAAA,OAAKY,UAAU,cAAa7D,SAAC,wBAGjCiD,cAAA,OAAKY,UAAU,gBAAe7D,SAC5B8D,eAAA,OAAKD,UAAU,aAAY7D,SAAA,CACzBiD,cAAA,OAAKY,UAAU,eAAc7D,SAAEkI,EAAMiF,SAAW,IAChDlK,cAAA,OAAKY,UAAU,cAAa7D,SAAC,iBAGjCiD,cAAA,OAAKY,UAAU,gBAAe7D,SAC5B8D,eAAA,OAAKD,UAAU,aAAY7D,SAAA,CACzBiD,cAAA,OAAKY,UAAU,eAAc7D,SAAEkI,EAAMkF,MAAQ,IAC7CnK,cAAA,OAAKY,UAAU,cAAa7D,SAAC,cAGjCiD,cAAA,OAAKY,UAAU,gBAAe7D,SAC5B8D,eAAA,OAAKD,UAAU,aAAY7D,SAAA,CACzB8D,eAAA,OAAKD,UAAU,eAAc7D,SAAA,CAC1BkI,EAAMa,MAAQ,EAAIG,KAAKC,OAAQjB,EAAMiF,SAAW,GAAKjF,EAAMa,MAAS,KAAO,EAAE,OAEhF9F,cAAA,OAAKY,UAAU,cAAa7D,SAAC,4BAMnCiD,cAAA,OAAKY,UAAU,MAAK7D,SAClBiD,cAAA,OAAKY,UAAU,SAAQ7D,SACrBiD,cAAA,OAAKY,UAAU,OAAM7D,SACnB8D,eAAA,OAAKD,UAAU,YAAW7D,SAAA,CACxB8D,eAAA,OAAKD,UAAU,yDAAwD7D,SAAA,CACrEiD,cAAA,MAAIY,UAAU,kBAAiB7D,SAAC,uBAChC8D,eAAA,OAAA9D,SAAA,CACE8D,eAAA,UACED,UAAU,sCACVO,QAASA,IAAMhC,OAAOiL,QAAQrN,SAAA,CAE9BiD,cAAC8C,IAAK,CAAClC,UAAU,SAAS,WAG5BC,eAAA,UACED,UAAU,iCACVO,QAASA,KAEP9C,IAAMS,KAAK,gCACX/B,SAAA,CAEFiD,cAAC0J,IAAU,CAAC9I,UAAU,SAAS,kBAMpCmF,EAAWtC,OAAS,EACnBzD,cAAA,OAAKY,UAAU,mBAAkB7D,SAC/B8D,eAAA,SAAOD,UAAU,qCAAoC7D,SAAA,CACnDiD,cAAA,SAAAjD,SACE8D,eAAA,MAAA9D,SAAA,CACEiD,cAAA,MAAAjD,SAAI,iBACJiD,cAAA,MAAAjD,SAAI,eACJiD,cAAA,MAAAjD,SAAI,eACJiD,cAAA,MAAAjD,SAAI,SACJiD,cAAA,MAAAjD,SAAI,kBACJiD,cAAA,MAAAjD,SAAI,WACJiD,cAAA,MAAAjD,SAAI,SACJiD,cAAA,MAAAjD,SAAI,iBAGRiD,cAAA,SAAAjD,SACGgJ,EAAWS,IAAKC,GACf5F,eAAA,MAAA9D,SAAA,CACEiD,cAAA,MAAAjD,SACEiD,cAAA,UAAAjD,SAAS0J,EAAOE,QAAQtF,SAE1BrB,cAAA,MAAAjD,SAAK0J,EAAOE,QAAQxD,YACpBnD,cAAA,MAAAjD,SAAK0J,EAAOE,QAAQvD,aACpBpD,cAAA,MAAAjD,SAAK0J,EAAOE,QAAQtD,OACpBrD,cAAA,MAAAjD,SAAK0J,EAAOE,QAAQ1D,eACpBjD,cAAA,MAAAjD,SACEiD,cAAA,QAAMY,UAAW,uBAAuB6F,EAAO4D,SAAStN,SACrD0J,EAAO4D,WAGZrK,cAAA,MAAAjD,SACG,IAAI0I,KAAKgB,EAAOS,UAAUC,uBAE7BnH,cAAA,MAAAjD,SACEiD,cAAA,UACEY,UAAU,gCACVO,QAASA,IAnJZ1D,WACvB,GAAI0B,OAAOmL,QAAQ,2DACjB,UACQnN,IAAMoN,OAAO,mBAAmBvJ,KACtC3C,IAAMC,QAAQ,0CACd0L,GACF,CAAE,MAAO1N,GACPoB,QAAQpB,MAAM,6BAA8BA,GAC5C+B,IAAM/B,MAAM,qCACd,GA0IuCkO,CAAiB/D,EAAOW,KACvCqD,MAAM,gBAAe1N,SAErBiD,cAAC0K,IAAO,UAtBLjE,EAAOW,aA+BxBvG,eAAA,OAAKD,UAAU,8BAA6B7D,SAAA,CAC1CiD,cAACuG,IAAa,CAACH,KAAM,GAAIxF,UAAU,SACnCZ,cAAA,KAAAjD,SAAG,8DC9KN4N,MAVUA,IAErB9J,eAAC+J,IAAM,CAAA7N,SAAA,CACLiD,cAAC6K,IAAK,CAACC,KAAK,IAAIC,QAAS/K,cAACgF,EAAa,MACvChF,cAAC6K,IAAK,CAACC,KAAK,eAAeC,QAAS/K,cAACqH,EAAW,MAChDrH,cAAC6K,IAAK,CAACC,KAAK,cAAcC,QAAS/K,cAAC4J,EAAc,SC8JzC5E,MAnKOA,KACpB,MAAM,KAAEhJ,GAASkE,KACV+E,EAAOC,GAAYvE,mBAAS,CACjCqK,gBAAiB,EACjBC,YAAa,EACbC,SAAU,EACVC,eAAgB,KAEX9O,EAASyF,GAAcnB,oBAAS,GAEvCzD,oBAAU,KACRkO,KACC,IAEH,MAAMA,EAAoB3N,UACxB,IACE,MAAM4N,EAAY,IAAI5F,KACtB4F,EAAUC,QAAQD,EAAUE,UAAY,IAExC,MAOMxF,SAPiB5I,IAAMU,IAAI,gCAAiC,CAChE2N,OAAQ,CACNH,UAAWA,EAAU3F,cAAcC,MAAM,KAAK,GAC9C8F,SAAS,IAAIhG,MAAOC,cAAcC,MAAM,KAAK,OAIrB/I,KAAKA,KAC3B8O,EAAe3F,EAAW4F,OAAOC,GAAkB,YAAbA,EAAEvB,QAAsB5G,OAC9DoI,EAAY9F,EAAW4F,OAAOC,GAAkB,SAAbA,EAAEvB,QAAmB5G,OACxDqI,EAAa/F,EAAWtC,OAE9ByB,EAAS,CACP8F,gBAAiBc,EACjBb,YAAaS,EACbR,SAAUW,EACVV,eAAgBW,EAAa,EAAI7F,KAAKC,MAAOwF,EAAeI,EAAc,KAAO,GAErF,CAAE,MAAOxP,GACPoB,QAAQpB,MAAM,gCAAiCA,EACjD,CAAC,QACCwF,GAAW,EACb,GAGF,OAAIzF,EAEA2D,cAAA,OAAKY,UAAU,kBAAiB7D,SAC9BiD,cAAA,OAAKY,UAAU,iBAAiBK,KAAK,SAAQlE,SAC3CiD,cAAA,QAAMY,UAAU,kBAAiB7D,SAAC,mBAOxC8D,eAAA,OAAA9D,SAAA,CACEiD,cAAA,OAAKY,UAAU,WAAU7D,SACvB8D,eAAA,OAAKD,UAAU,SAAQ7D,SAAA,CACrBiD,cAAA,MAAIY,UAAU,qBAAoB7D,SAAC,sBACnC8D,eAAA,KAAGD,UAAU,gBAAe7D,SAAA,CAAC,iBAAmB,OAAJf,QAAI,IAAJA,OAAI,EAAJA,EAAMqF,KAAK,YAK3DR,eAAA,OAAKD,UAAU,WAAU7D,SAAA,CACvBiD,cAAA,OAAKY,UAAU,gBAAe7D,SAC5B8D,eAAA,OAAKD,UAAU,aAAY7D,SAAA,CACzBiD,cAAA,OAAKY,UAAU,eAAc7D,SAAEkI,EAAM+F,kBACrChL,cAAA,OAAKY,UAAU,cAAa7D,SAAC,wBAGjCiD,cAAA,OAAKY,UAAU,gBAAe7D,SAC5B8D,eAAA,OAAKD,UAAU,aAAY7D,SAAA,CACzBiD,cAAA,OAAKY,UAAU,eAAc7D,SAAEkI,EAAMgG,cACrCjL,cAAA,OAAKY,UAAU,cAAa7D,SAAC,sBAGjCiD,cAAA,OAAKY,UAAU,gBAAe7D,SAC5B8D,eAAA,OAAKD,UAAU,aAAY7D,SAAA,CACzBiD,cAAA,OAAKY,UAAU,eAAc7D,SAAEkI,EAAMiG,WACrClL,cAAA,OAAKY,UAAU,cAAa7D,SAAC,mBAGjCiD,cAAA,OAAKY,UAAU,gBAAe7D,SAC5B8D,eAAA,OAAKD,UAAU,aAAY7D,SAAA,CACzB8D,eAAA,OAAKD,UAAU,eAAc7D,SAAA,CAAEkI,EAAMkG,eAAe,OACpDnL,cAAA,OAAKY,UAAU,cAAa7D,SAAC,4BAMnCiD,cAAA,OAAKY,UAAU,WAAU7D,SACvBiD,cAAA,OAAKY,UAAU,SAAQ7D,SACrBiD,cAAA,OAAKY,UAAU,OAAM7D,SACnB8D,eAAA,OAAKD,UAAU,YAAW7D,SAAA,CACxBiD,cAAA,MAAIY,UAAU,kBAAiB7D,SAAC,kBAChC8D,eAAA,OAAKD,UAAU,MAAK7D,SAAA,CAClBiD,cAAA,OAAKY,UAAU,gBAAe7D,SAC5BiD,cAACc,IAAI,CAACC,GAAG,gBAAgBH,UAAU,uBAAsB7D,SACvDiD,cAAA,OAAKY,UAAU,yBAAwB7D,SACrC8D,eAAA,OAAKD,UAAU,YAAW7D,SAAA,CACxBiD,cAACmG,IAAQ,CAACvF,UAAU,oBAAoBwF,KAAM,KAC9CpG,cAAA,MAAIY,UAAU,aAAY7D,SAAC,iBAC3BiD,cAAA,KAAGY,UAAU,uBAAsB7D,SAAC,kCAK5CiD,cAAA,OAAKY,UAAU,gBAAe7D,SAC5BiD,cAACc,IAAI,CAACC,GAAG,yBAAyBH,UAAU,uBAAsB7D,SAChEiD,cAAA,OAAKY,UAAU,yBAAwB7D,SACrC8D,eAAA,OAAKD,UAAU,YAAW7D,SAAA,CACxBiD,cAACuG,IAAa,CAAC3F,UAAU,oBAAoBwF,KAAM,KACnDpG,cAAA,MAAIY,UAAU,aAAY7D,SAAC,kBAC3BiD,cAAA,KAAGY,UAAU,uBAAsB7D,SAAC,0CAK5CiD,cAAA,OAAKY,UAAU,gBAAe7D,SAC5BiD,cAACc,IAAI,CAACC,GAAG,WAAWH,UAAU,uBAAsB7D,SAClDiD,cAAA,OAAKY,UAAU,yBAAwB7D,SACrC8D,eAAA,OAAKD,UAAU,YAAW7D,SAAA,CACxBiD,cAACoB,IAAM,CAACR,UAAU,iBAAiBwF,KAAM,KACzCpG,cAAA,MAAIY,UAAU,aAAY7D,SAAC,YAC3BiD,cAAA,KAAGY,UAAU,uBAAsB7D,SAAC,6CAYtDiD,cAAA,OAAKY,UAAU,MAAK7D,SAClBiD,cAAA,OAAKY,UAAU,SAAQ7D,SACrBiD,cAAA,OAAKY,UAAU,OAAM7D,SACnB8D,eAAA,OAAKD,UAAU,YAAW7D,SAAA,CACxBiD,cAAA,MAAIY,UAAU,kBAAiB7D,SAAC,wBAChC8D,eAAA,OAAKD,UAAU,MAAK7D,SAAA,CAClB8D,eAAA,OAAKD,UAAU,WAAU7D,SAAA,CACvB8D,eAAA,KAAA9D,SAAA,CAAGiD,cAAA,UAAAjD,SAAQ,UAAc,IAAM,OAAJf,QAAI,IAAJA,OAAI,EAAJA,EAAMqF,QACjCR,eAAA,KAAA9D,SAAA,CAAGiD,cAAA,UAAAjD,SAAQ,gBAAoB,IAAM,OAAJf,QAAI,IAAJA,OAAI,EAAJA,EAAMmH,aACvCtC,eAAA,KAAA9D,SAAA,CAAGiD,cAAA,UAAAjD,SAAQ,WAAe,IAAM,OAAJf,QAAI,IAAJA,OAAI,EAAJA,EAAMiC,YAEpC4C,eAAA,OAAKD,UAAU,WAAU7D,SAAA,CACvB8D,eAAA,KAAA9D,SAAA,CAAGiD,cAAA,UAAAjD,SAAQ,gBAAoB,IAAM,OAAJf,QAAI,IAAJA,OAAI,EAAJA,EAAMoH,cACvCvC,eAAA,KAAA9D,SAAA,CAAGiD,cAAA,UAAAjD,SAAQ,UAAc,IAAM,OAAJf,QAAI,IAAJA,OAAI,EAAJA,EAAMqH,QACjCxC,eAAA,KAAA9D,SAAA,CAAGiD,cAAA,UAAAjD,SAAQ,mBAAuB,IAAM,OAAJf,QAAI,IAAJA,OAAI,EAAJA,EAAMiH,mC,QC6F7C8I,MArPGA,KAChB,MAAOC,EAAUC,GAAetL,oBAAS,IAClCyB,EAAQ8J,GAAavL,mBAAS,OAC9BtE,EAASyF,GAAcnB,oBAAS,GACjCwL,EAAaC,iBAAO,MAE1BlP,oBAAU,IACD,KACDiP,EAAWE,SACbF,EAAWE,QAAQpN,SAGtB,IAEH,MAAMqN,EAAa7O,UACb8O,IACFN,GAAY,GACRE,EAAWE,SACbF,EAAWE,QAAQpN,QAErBiN,EAAUK,SACJC,EAA0BD,KAI9BE,EAAeC,IACnBhP,QAAQpB,MAAMoQ,GACdrO,IAAM/B,MAAM,2BA8BRkQ,EAA4B/O,UAChCqE,GAAW,GAEX,IAEE,MAAMgF,QA/BD,IAAI6F,QAAQ,CAACC,EAASC,KACtBxE,UAAUyE,YAKfzE,UAAUyE,YAAYC,mBACnBC,IACCJ,EAAQ,CACN7F,SAAUiG,EAASC,OAAOlG,SAC1BC,UAAWgG,EAASC,OAAOjG,aAG9B1K,IACCoB,QAAQwP,KAAK,yCAA0C5Q,GACvDsQ,EAAQ,CAAE7F,SAAU,KAAMC,UAAW,QAEvC,CACEmG,oBAAoB,EACpBC,QAAS,IACTC,WAAY,MAlBdT,EAAQ,CAAE7F,SAAU,KAAMC,UAAW,SAgCjCsG,QAAyBnQ,IAAMgB,KAAK,mBAAoB,CAC5D8J,KAAMrB,IAGR,GAAI0G,EAAiB1Q,KAAK0B,QAAS,CAEjC,MAAMiP,QAA2BpQ,IAAMgB,KAAK,uBAAwB,CAClEqP,SAAUF,EAAiB1Q,KAAKA,KAAKwK,IACrCN,gBAGEyG,EAAmB3Q,KAAK0B,UAC1BD,IAAMC,QAAQiP,EAAmB3Q,KAAK6B,SACtCyN,EAAU,CACR5N,SAAS,EACTG,QAAS8O,EAAmB3Q,KAAK6B,QACjC7B,KAAM2Q,EAAmB3Q,KAAKA,OAGpC,CACF,CAAE,MAAON,GAAQ,IAADiC,EAAAC,EACd,MAAMC,GAAwB,QAAdF,EAAAjC,EAAMsB,gBAAQ,IAAAW,GAAM,QAANC,EAAdD,EAAgB3B,YAAI,IAAA4B,OAAN,EAAdA,EAAsBC,UAAW,4BACjDJ,IAAM/B,MAAMmC,GACZyN,EAAU,CACR5N,SAAS,EACTG,QAASA,GAEb,CAAC,QACCqD,GAAW,EACb,GA+BF,OACEjB,eAAA,OAAA9D,SAAA,CACEiD,cAAA,OAAKY,UAAU,WAAU7D,SACvB8D,eAAA,OAAKD,UAAU,SAAQ7D,SAAA,CACrBiD,cAAA,MAAIY,UAAU,qBAAoB7D,SAAC,iBACnCiD,cAAA,KAAGY,UAAU,gBAAe7D,SAAC,kDAIjCiD,cAAA,OAAKY,UAAU,6BAA4B7D,SACzCiD,cAAA,OAAKY,UAAU,WAAU7D,SACvBiD,cAAA,OAAKY,UAAU,OAAM7D,SACnB8D,eAAA,OAAKD,UAAU,YAAW7D,SAAA,CACxBiD,cAAA,MAAIY,UAAU,8BAA6B7D,SAAC,qBAE1CiP,IAAa5J,GACbvB,eAAA,OAAKD,UAAU,cAAa7D,SAAA,CAC1BiD,cAACmG,IAAQ,CAACC,KAAM,IAAKxF,UAAU,oBAC/BZ,cAAA,KAAGY,UAAU,aAAY7D,SAAC,6CAC1B8D,eAAA,UACED,UAAU,kBACVO,QA5CGsM,KACnBxB,GAAY,GACZC,EAAU,MAEVhN,WAAW,KACLiN,EAAWE,SACbF,EAAWE,QAAQpN,QAGrBkN,EAAWE,QAAU,IAAIqB,IACvB,YACA,CACEC,IAAK,GACLC,MAAO,CAAE1E,MAAO,IAAKC,OAAQ,KAC7B0E,YAAa,IAEf,GAGF1B,EAAWE,QAAQyB,OAAOxB,EAAYG,IACrC,MAwBmC1P,SAAA,CAEtBiD,cAAC+N,IAAQ,CAACnN,UAAU,SAAS,uBAMlCoL,GACCnL,eAAA,OAAKD,UAAU,cAAa7D,SAAA,CAC1BiD,cAAA,OAAKY,UAAU,yBAAwB7D,SACrCiD,cAAA,OAAKgB,GAAG,gBAEVhB,cAAA,KAAGY,UAAU,aAAY7D,SAAC,qCAC1BiD,cAAA,UACEY,UAAU,oBACVO,QAASA,KACP8K,GAAY,GACRE,EAAWE,SACbF,EAAWE,QAAQpN,SAErBlC,SACH,cAMJqF,GACCvB,eAAA,OAAKD,UAAU,cAAa7D,SAAA,CACzBqF,EAAO9D,QACNuC,eAAA,OAAKD,UAAU,sBAAqB7D,SAAA,CAClCiD,cAAC+E,IAAO,CAACnE,UAAU,SAClBwB,EAAO3D,WAGVoC,eAAA,OAAKD,UAAU,qBAAoB7D,SAAA,CACjCiD,cAACgO,IAAO,CAACpN,UAAU,SAClBwB,EAAO3D,WAIZuB,cAAA,OAAKY,UAAU,OAAM7D,SACnBiD,cAAA,UACEY,UAAU,uBACVO,QA9FC8M,KACnBhC,GAAY,GACZC,EAAU,OA6FQnJ,SAAU1G,EAAQU,SAEjBV,EACCwE,eAAAK,WAAA,CAAAnE,SAAA,CACEiD,cAAA,QAAMY,UAAU,0CAA0C,mBAI5DC,eAAAK,WAAA,CAAAnE,SAAA,CACEiD,cAACmG,IAAQ,CAACvF,UAAU,SAAS,kCAcjDZ,cAAA,OAAKY,UAAU,WAAU7D,SACvBiD,cAAA,OAAKY,UAAU,SAAQ7D,SACrBiD,cAAA,OAAKY,UAAU,OAAM7D,SACnB8D,eAAA,OAAKD,UAAU,YAAW7D,SAAA,CACxBiD,cAAA,MAAIY,UAAU,kBAAiB7D,SAAC,iBAChC8D,eAAA,MAAID,UAAU,gBAAe7D,SAAA,CAC3B8D,eAAA,MAAID,UAAU,OAAM7D,SAAA,CAClBiD,cAAA,UAAAjD,SAAQ,OAAW,qDAErB8D,eAAA,MAAID,UAAU,OAAM7D,SAAA,CAClBiD,cAAA,UAAAjD,SAAQ,OAAW,iEAErB8D,eAAA,MAAID,UAAU,OAAM7D,SAAA,CAClBiD,cAAA,UAAAjD,SAAQ,OAAW,gDAErB8D,eAAA,MAAID,UAAU,OAAM7D,SAAA,CAClBiD,cAAA,UAAAjD,SAAQ,OAAW,mDAErB8D,eAAA,MAAID,UAAU,OAAM7D,SAAA,CAClBiD,cAAA,UAAAjD,SAAQ,OAAW,oECZtBmR,MAhOMA,KACnB,MAAOnI,EAAY8D,GAAiBlJ,mBAAS,KACtCsE,EAAOC,GAAYvE,mBAAS,CACjCmF,MAAO,EACPoE,QAAS,EACTC,KAAM,EACNgB,eAAgB,KAEXE,EAAW8C,GAAgBxN,mBAAS,IAAI8E,KAAKA,KAAK2I,MAAQ,QAA0B1I,cAAcC,MAAM,KAAK,KAC7G8F,EAAS4C,GAAc1N,oBAAS,IAAI8E,MAAOC,cAAcC,MAAM,KAAK,KACpEtJ,EAASyF,GAAcnB,oBAAS,GAEjCqJ,EAAkBC,sBAAYxM,UAClC,IACEqE,GAAW,GACXpE,QAAQC,IAAI,mCAAoC,CAAE0N,YAAWI,YAC7D/N,QAAQC,IAAI,iBAAkBR,IAAMC,SAASC,QAAQC,QAErD,MAAMM,QAAiBT,IAAMU,IAAI,gCAAiC,CAChE2N,OAAQ,CACNH,YACAI,aAIJ/N,QAAQC,IAAI,uBAAwBC,EAAShB,MAC7C,MAAMA,EAAOgB,EAAShB,KAAKA,KAC3BiN,EAAcjN,GAGd,MAAM8O,EAAe9O,EAAK+O,OAAOC,GAAkB,YAAbA,EAAEvB,QAAsB5G,OACxDoI,EAAYjP,EAAK+O,OAAOC,GAAkB,SAAbA,EAAEvB,QAAmB5G,OAClDqI,EAAalP,EAAK6G,OAExByB,EAAS,CACPY,MAAOgG,EACP5B,QAASwB,EACTvB,KAAM0B,EACNV,eAAgBW,EAAa,EAAI7F,KAAKC,MAAOwF,EAAeI,EAAc,KAAO,GAErF,CAAE,MAAOxP,GAAQ,IAADiC,EACdb,QAAQpB,MAAM,6BAA8BA,GAC5CoB,QAAQpB,MAAM,kBAAiC,QAAhBiC,EAAEjC,EAAMsB,gBAAQ,IAAAW,OAAA,EAAdA,EAAgB3B,KACnD,CAAC,QACCkF,GAAW,EACb,GACC,CAACuJ,EAAWI,IAMf,OAJAvO,oBAAU,KACR8M,KACC,CAACA,IAEA3N,EAEA2D,cAAA,OAAKY,UAAU,kBAAiB7D,SAC9BiD,cAAA,OAAKY,UAAU,iBAAiBK,KAAK,SAAQlE,SAC3CiD,cAAA,QAAMY,UAAU,kBAAiB7D,SAAC,mBAOxC8D,eAAA,OAAA9D,SAAA,CACEiD,cAAA,OAAKY,UAAU,WAAU7D,SACvB8D,eAAA,OAAKD,UAAU,SAAQ7D,SAAA,CACrBiD,cAAA,MAAIY,UAAU,qBAAoB7D,SAAC,kBACnCiD,cAAA,KAAGY,UAAU,gBAAe7D,SAAC,sCAKjCiD,cAAA,OAAKY,UAAU,WAAU7D,SACvBiD,cAAA,OAAKY,UAAU,WAAU7D,SACvBiD,cAAA,OAAKY,UAAU,OAAM7D,SACnB8D,eAAA,OAAKD,UAAU,YAAW7D,SAAA,CACxB8D,eAAA,MAAID,UAAU,kBAAiB7D,SAAA,CAC7BiD,cAACuG,IAAa,CAAC3F,UAAU,SAAS,gBAGpCC,eAAA,OAAKD,UAAU,MAAK7D,SAAA,CAClB8D,eAAA,OAAKD,UAAU,gBAAe7D,SAAA,CAC5BiD,cAAA,SAAOuC,QAAQ,YAAY3B,UAAU,aAAY7D,SAAC,eAClDiD,cAAA,SACEtD,KAAK,OACLkE,UAAU,eACVI,GAAG,YACHjD,MAAOsN,EACP5I,SAAWT,GAAMmM,EAAanM,EAAEC,OAAOlE,YAG3C8C,eAAA,OAAKD,UAAU,gBAAe7D,SAAA,CAC5BiD,cAAA,SAAOuC,QAAQ,UAAU3B,UAAU,aAAY7D,SAAC,aAChDiD,cAAA,SACEtD,KAAK,OACLkE,UAAU,eACVI,GAAG,UACHjD,MAAO0N,EACPhJ,SAAWT,GAAMqM,EAAWrM,EAAEC,OAAOlE,wBAUnD8C,eAAA,OAAKD,UAAU,WAAU7D,SAAA,CACvBiD,cAAA,OAAKY,UAAU,gBAAe7D,SAC5B8D,eAAA,OAAKD,UAAU,aAAY7D,SAAA,CACzBiD,cAAA,OAAKY,UAAU,eAAc7D,SAAEkI,EAAMa,QACrC9F,cAAA,OAAKY,UAAU,cAAa7D,SAAC,wBAGjCiD,cAAA,OAAKY,UAAU,gBAAe7D,SAC5B8D,eAAA,OAAKD,UAAU,aAAY7D,SAAA,CACzBiD,cAAA,OAAKY,UAAU,eAAc7D,SAAEkI,EAAMiF,UACrClK,cAAA,OAAKY,UAAU,cAAa7D,SAAC,iBAGjCiD,cAAA,OAAKY,UAAU,gBAAe7D,SAC5B8D,eAAA,OAAKD,UAAU,aAAY7D,SAAA,CACzBiD,cAAA,OAAKY,UAAU,eAAc7D,SAAEkI,EAAMkF,OACrCnK,cAAA,OAAKY,UAAU,cAAa7D,SAAC,cAGjCiD,cAAA,OAAKY,UAAU,gBAAe7D,SAC5B8D,eAAA,OAAKD,UAAU,aAAY7D,SAAA,CACzB8D,eAAA,OAAKD,UAAU,eAAc7D,SAAA,CAAEkI,EAAMkG,eAAe,OACpDnL,cAAA,OAAKY,UAAU,cAAa7D,SAAC,4BAMnCiD,cAAA,OAAKY,UAAU,MAAK7D,SAClBiD,cAAA,OAAKY,UAAU,SAAQ7D,SACrBiD,cAAA,OAAKY,UAAU,OAAM7D,SACnB8D,eAAA,OAAKD,UAAU,YAAW7D,SAAA,CACxB8D,eAAA,OAAKD,UAAU,yDAAwD7D,SAAA,CACrE8D,eAAA,MAAID,UAAU,kBAAiB7D,SAAA,CAC7BiD,cAACsG,IAAU,CAAC1F,UAAU,SAAS,wBAGjCC,eAAA,QAAMD,UAAU,aAAY7D,SAAA,CACzBgJ,EAAWtC,OAAO,uBAItBsC,EAAWtC,OAAS,EACnBzD,cAAA,OAAKY,UAAU,mBAAkB7D,SAC/B8D,eAAA,SAAOD,UAAU,qCAAoC7D,SAAA,CACnDiD,cAAA,SAAAjD,SACE8D,eAAA,MAAA9D,SAAA,CACEiD,cAAA,MAAAjD,SAAI,SACJiD,cAAA,MAAAjD,SAAI,WACJiD,cAAA,MAAAjD,SAAI,SACJiD,cAAA,MAAAjD,SAAI,aACJiD,cAAA,MAAAjD,SAAI,WACJiD,cAAA,MAAAjD,SAAI,iBAGRiD,cAAA,SAAAjD,SACGgJ,EAAWS,IAAKC,IAAM,IAAA6H,EAAA,OACrBzN,eAAA,MAAA9D,SAAA,CACEiD,cAAA,MAAAjD,SACEiD,cAAA,UAAAjD,SACG,IAAI0I,KAAKgB,EAAO8H,MAAMC,yBAG3BxO,cAAA,MAAAjD,SACEiD,cAAA,QAAMY,UAAW,uBAAuB6F,EAAO4D,SAAStN,SACrD0J,EAAO4D,WAGZrK,cAAA,MAAAjD,SACG,IAAI0I,KAAKgB,EAAOS,UAAUC,uBAE7BnH,cAAA,MAAAjD,SAAK0J,EAAOrH,WACZY,cAAA,MAAAjD,SAAK0J,EAAOa,SACZtH,cAAA,MAAAjD,UAAmB,QAAduR,EAAA7H,EAAOgI,eAAO,IAAAH,OAAA,EAAdA,EAAgBjN,OAAQ,UAhBtBoF,EAAOW,cAuBxBvG,eAAA,OAAKD,UAAU,8BAA6B7D,SAAA,CAC1CiD,cAACuG,IAAa,CAACH,KAAM,GAAIxF,UAAU,SACnCZ,cAAA,KAAAjD,SAAG,wEASdgJ,EAAWtC,OAAS,GACnBzD,cAAA,OAAKY,UAAU,WAAU7D,SACvBiD,cAAA,OAAKY,UAAU,SAAQ7D,SACrBiD,cAAA,OAAKY,UAAU,OAAM7D,SACnB8D,eAAA,OAAKD,UAAU,YAAW7D,SAAA,CACxBiD,cAAA,MAAIY,UAAU,kBAAiB7D,SAAC,uBAChC8D,eAAA,OAAKD,UAAU,MAAK7D,SAAA,CAClB8D,eAAA,OAAKD,UAAU,WAAU7D,SAAA,CACvB8D,eAAA,KAAA9D,SAAA,CAAGiD,cAAA,UAAAjD,SAAQ,oBAAwB,IAAEkI,EAAMa,SAC3CjF,eAAA,KAAA9D,SAAA,CAAGiD,cAAA,UAAAjD,SAAQ,kBAAsB,IAAEkI,EAAMiF,cAE3CrJ,eAAA,OAAKD,UAAU,WAAU7D,SAAA,CACvB8D,eAAA,KAAA9D,SAAA,CAAGiD,cAAA,UAAAjD,SAAQ,eAAmB,IAAEkI,EAAMkF,QACtCtJ,eAAA,KAAA9D,SAAA,CAAGiD,cAAA,UAAAjD,SAAQ,qBAAyB,IAAEkI,EAAMkG,eAAe,0BCxMhEuD,MAVUA,IAErB7N,eAAC+J,IAAM,CAAA7N,SAAA,CACLiD,cAAC6K,IAAK,CAACC,KAAK,IAAIC,QAAS/K,cAACgF,EAAa,MACvChF,cAAC6K,IAAK,CAACC,KAAK,QAAQC,QAAS/K,cAAC+L,EAAS,MACvC/L,cAAC6K,IAAK,CAACC,KAAK,iBAAiBC,QAAS/K,cAACkO,EAAY,SC6V1CS,MApWCA,KACd,MAAM,KAAE3S,EAAI,cAAEsD,EAAa,eAAEK,GAAmBO,KACzC0O,EAAWC,GAAgBlO,mBAAS,YACpCnB,EAAasP,GAAkBnO,mBAAS,CAC7CU,MAAU,OAAJrF,QAAI,IAAJA,OAAI,EAAJA,EAAMqF,OAAQ,GACpBpD,OAAW,OAAJjC,QAAI,IAAJA,OAAI,EAAJA,EAAMiC,QAAS,GACtBgF,cAAkB,OAAJjH,QAAI,IAAJA,OAAI,EAAJA,EAAMiH,eAAgB,GACpCG,YAAgB,OAAJpH,QAAI,IAAJA,OAAI,EAAJA,EAAMoH,aAAc,GAChCC,MAAU,OAAJrH,QAAI,IAAJA,OAAI,EAAJA,EAAMqH,OAAQ,KAEf0L,EAAcC,GAAmBrO,mBAAS,CAC/Cf,gBAAiB,GACjBC,YAAa,GACbqD,gBAAiB,MAEZ7G,EAASyF,GAAcnB,oBAAS,GAEjCsO,EAAuBjN,IAC3B8M,EAAe,IACVtP,EACH,CAACwC,EAAEC,OAAOZ,MAAOW,EAAEC,OAAOlE,SAIxBmR,EAAwBlN,IAC5BgN,EAAgB,IACXD,EACH,CAAC/M,EAAEC,OAAOZ,MAAOW,EAAEC,OAAOlE,SAyD9B,OACE8C,eAAA,OAAA9D,SAAA,CACEiD,cAAA,OAAKY,UAAU,WAAU7D,SACvB8D,eAAA,OAAKD,UAAU,SAAQ7D,SAAA,CACrBiD,cAAA,MAAIY,UAAU,qBAAoB7D,SAAC,YACnCiD,cAAA,KAAGY,UAAU,gBAAe7D,SAAC,yCAIjC8D,eAAA,OAAKD,UAAU,MAAK7D,SAAA,CAClBiD,cAAA,OAAKY,UAAU,WAAU7D,SACvBiD,cAAA,OAAKY,UAAU,OAAM7D,SACnBiD,cAAA,OAAKY,UAAU,YAAW7D,SACxB8D,eAAA,OAAKD,UAAU,4BAA2B7D,SAAA,CACxC8D,eAAA,UACED,UAAW,aAA0B,YAAdgO,EAA0B,SAAW,IAC5DzN,QAASA,IAAM0N,EAAa,WAAW9R,SAAA,CAEvCiD,cAACoB,IAAM,CAACR,UAAU,SAAS,yBAG7BC,eAAA,UACED,UAAW,aAA0B,aAAdgO,EAA2B,SAAW,IAC7DzN,QAASA,IAAM0N,EAAa,YAAY9R,SAAA,CAExCiD,cAAC4C,IAAM,CAAChC,UAAU,SAAS,8BAQrCZ,cAAA,OAAKY,UAAU,WAAU7D,SACvBiD,cAAA,OAAKY,UAAU,OAAM7D,SACnBiD,cAAA,OAAKY,UAAU,YAAW7D,SACT,YAAd6R,EACC/N,eAAA,OAAA9D,SAAA,CACEiD,cAAA,MAAIY,UAAU,kBAAiB7D,SAAC,wBAChC8D,eAAA,QAAMqB,SA5FMzE,UAC1BuE,EAAEG,iBACFL,GAAW,GAEX,WACuBxC,EAAcE,IACxBlB,SACTwQ,EAAe,CACbzN,MAAU,OAAJrF,QAAI,IAAJA,OAAI,EAAJA,EAAMqF,OAAQ,GACpBpD,OAAW,OAAJjC,QAAI,IAAJA,OAAI,EAAJA,EAAMiC,QAAS,GACtBgF,cAAkB,OAAJjH,QAAI,IAAJA,OAAI,EAAJA,EAAMiH,eAAgB,GACpCG,YAAgB,OAAJpH,QAAI,IAAJA,OAAI,EAAJA,EAAMoH,aAAc,GAChCC,MAAU,OAAJrH,QAAI,IAAJA,OAAI,EAAJA,EAAMqH,OAAQ,GAG1B,CAAE,MAAO/G,GACPoB,QAAQpB,MAAM,wBAAyBA,EACzC,CAAC,QACCwF,GAAW,EACb,GAyEkD/E,SAAA,CAClC8D,eAAA,OAAKD,UAAU,MAAK7D,SAAA,CAClB8D,eAAA,OAAKD,UAAU,gBAAe7D,SAAA,CAC5BiD,cAAA,SAAOuC,QAAQ,OAAO3B,UAAU,aAAY7D,SAAC,cAG7C8D,eAAA,OAAKD,UAAU,cAAa7D,SAAA,CAC1BiD,cAAA,QAAMY,UAAU,mBAAkB7D,SAChCiD,cAACoB,IAAM,MAETpB,cAAA,SACEtD,KAAK,OACLkE,UAAU,eACVI,GAAG,OACHK,KAAK,OACLtD,MAAOyB,EAAY6B,KACnBoB,SAAUwM,EACVvM,UAAQ,UAKd7B,eAAA,OAAKD,UAAU,gBAAe7D,SAAA,CAC5BiD,cAAA,SAAOuC,QAAQ,QAAQ3B,UAAU,aAAY7D,SAAC,kBAG9C8D,eAAA,OAAKD,UAAU,cAAa7D,SAAA,CAC1BiD,cAAA,QAAMY,UAAU,mBAAkB7D,SAChCiD,cAACwC,IAAU,MAEbxC,cAAA,SACEtD,KAAK,QACLkE,UAAU,eACVI,GAAG,QACHK,KAAK,QACLtD,MAAOyB,EAAYvB,MACnBwE,SAAUwM,EACVvM,UAAQ,aAMhB7B,eAAA,OAAKD,UAAU,OAAM7D,SAAA,CACnBiD,cAAA,SAAOuC,QAAQ,eAAe3B,UAAU,aAAY7D,SAAC,kBAGrD8D,eAAA,OAAKD,UAAU,cAAa7D,SAAA,CAC1BiD,cAAA,QAAMY,UAAU,mBAAkB7D,SAChCiD,cAAC4D,IAAO,MAEV5D,cAAA,SACEtD,KAAK,MACLkE,UAAU,eACVI,GAAG,eACHK,KAAK,eACLtD,MAAOyB,EAAYyD,aACnBR,SAAUwM,EACVvM,UAAQ,EACRC,YAAY,oCACZkB,UAAU,aAKA,aAAX,OAAJ7H,QAAI,IAAJA,OAAI,EAAJA,EAAMiF,OACLJ,eAAAK,WAAA,CAAAnE,SAAA,CACE8D,eAAA,OAAKD,UAAU,MAAK7D,SAAA,CAClB8D,eAAA,OAAKD,UAAU,gBAAe7D,SAAA,CAC5BiD,cAAA,SAAOuC,QAAQ,YAAY3B,UAAU,aAAY7D,SAAC,eAGlD8D,eAAA,OAAKD,UAAU,cAAa7D,SAAA,CAC1BiD,cAAA,QAAMY,UAAU,mBAAkB7D,SAChCiD,cAAC8D,IAAQ,MAEX9D,cAAA,SACEtD,KAAK,OACLkE,UAAU,eACVI,GAAG,YACHjD,MAAW,OAAJ/B,QAAI,IAAJA,OAAI,EAAJA,EAAMmH,UACbJ,UAAQ,OAGZ/C,cAAA,SAAOY,UAAU,aAAY7D,SAAC,oCAGhC8D,eAAA,OAAKD,UAAU,gBAAe7D,SAAA,CAC5BiD,cAAA,SAAOuC,QAAQ,aAAa3B,UAAU,aAAY7D,SAAC,eAGnD8D,eAAA,OAAKD,UAAU,cAAa7D,SAAA,CAC1BiD,cAAA,QAAMY,UAAU,mBAAkB7D,SAChCiD,cAAC+D,IAAe,MAElB/D,cAAA,SACEtD,KAAK,OACLkE,UAAU,eACVI,GAAG,aACHK,KAAK,aACLtD,MAAOyB,EAAY4D,WACnBX,SAAUwM,EACVvM,UAAQ,aAMhB7B,eAAA,OAAKD,UAAU,OAAM7D,SAAA,CACnBiD,cAAA,SAAOuC,QAAQ,OAAO3B,UAAU,aAAY7D,SAAC,SAG7C8D,eAAA,UACED,UAAU,cACVI,GAAG,OACHK,KAAK,OACLtD,MAAOyB,EAAY6D,KACnBZ,SAAUwM,EACVvM,UAAQ,EAAA3F,SAAA,CAERiD,cAAA,UAAQjC,MAAO,EAAEhB,SAAC,aAClBiD,cAAA,UAAQjC,MAAO,EAAEhB,SAAC,sBAO1BiD,cAAA,UACEtD,KAAK,SACLkE,UAAU,kBACVmC,SAAU1G,EAAQU,SAEjBV,EACCwE,eAAAK,WAAA,CAAAnE,SAAA,CACEiD,cAAA,QAAMY,UAAU,0CAA0C,iBAI5D,yBAMRC,eAAA,OAAA9D,SAAA,CACEiD,cAAA,MAAIY,UAAU,kBAAiB7D,SAAC,oBAChC8D,eAAA,QAAMqB,SAzNOzE,UAG3B,GAFAuE,EAAEG,iBAEE4M,EAAalP,cAAgBkP,EAAa7L,gBAK9C,GAAI6L,EAAalP,YAAY4D,OAAS,EACpCD,MAAM,uDADR,CAKA1B,GAAW,GAEX,WACuBnC,EAAeoP,EAAanP,gBAAiBmP,EAAalP,cACpEvB,SACT0Q,EAAgB,CACdpP,gBAAiB,GACjBC,YAAa,GACbqD,gBAAiB,IAGvB,CAAE,MAAO5G,GACPoB,QAAQpB,MAAM,yBAA0BA,EAC1C,CAAC,QACCwF,GAAW,EACb,CAjBA,MAPE0B,MAAM,+BAqN2CzG,SAAA,CACnC8D,eAAA,OAAKD,UAAU,OAAM7D,SAAA,CACnBiD,cAAA,SAAOuC,QAAQ,kBAAkB3B,UAAU,aAAY7D,SAAC,qBAGxD8D,eAAA,OAAKD,UAAU,cAAa7D,SAAA,CAC1BiD,cAAA,QAAMY,UAAU,mBAAkB7D,SAChCiD,cAAC4C,IAAM,MAET5C,cAAA,SACEtD,KAAK,WACLkE,UAAU,eACVI,GAAG,kBACHK,KAAK,kBACLtD,MAAOgR,EAAanP,gBACpB6C,SAAUyM,EACVxM,UAAQ,UAKd7B,eAAA,OAAKD,UAAU,OAAM7D,SAAA,CACnBiD,cAAA,SAAOuC,QAAQ,cAAc3B,UAAU,aAAY7D,SAAC,iBAGpD8D,eAAA,OAAKD,UAAU,cAAa7D,SAAA,CAC1BiD,cAAA,QAAMY,UAAU,mBAAkB7D,SAChCiD,cAAC4C,IAAM,MAET5C,cAAA,SACEtD,KAAK,WACLkE,UAAU,eACVI,GAAG,cACHK,KAAK,cACLtD,MAAOgR,EAAalP,YACpB4C,SAAUyM,EACVxM,UAAQ,UAKd7B,eAAA,OAAKD,UAAU,OAAM7D,SAAA,CACnBiD,cAAA,SAAOuC,QAAQ,kBAAkB3B,UAAU,aAAY7D,SAAC,yBAGxD8D,eAAA,OAAKD,UAAU,cAAa7D,SAAA,CAC1BiD,cAAA,QAAMY,UAAU,mBAAkB7D,SAChCiD,cAAC4C,IAAM,MAET5C,cAAA,SACEtD,KAAK,WACLkE,UAAU,eACVI,GAAG,kBACHK,KAAK,kBACLtD,MAAOgR,EAAa7L,gBACpBT,SAAUyM,EACVxM,UAAQ,UAKd1C,cAAA,UACEtD,KAAK,SACLkE,UAAU,kBACVmC,SAAU1G,EAAQU,SAEjBV,EACCwE,eAAAK,WAAA,CAAAnE,SAAA,CACEiD,cAAA,QAAMY,UAAU,0CAA0C,0BAI5D,uCC9UTuO,MAVQA,IAEnBnP,cAAA,OAAKY,UAAU,kBAAiB7D,SAC9BiD,cAAA,OAAKY,UAAU,iBAAiBK,KAAK,SAAQlE,SAC3CiD,cAAA,QAAMY,UAAU,kBAAiB7D,SAAC,mBCoE3BqS,MA7DHA,KACV,MAAM,gBAAEhT,EAAe,QAAEC,EAAO,KAAEL,GAASkE,IAI3C,OAFAxC,QAAQC,IAAI,oBAAqB,CAAEvB,kBAAiBC,UAASL,KAAU,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMqF,KAAMJ,KAAU,OAAJjF,QAAI,IAAJA,OAAI,EAAJA,EAAMiF,OAEvF5E,EACK2D,cAACmP,EAAc,IAGnB/S,EAgBHyE,eAAAK,WAAA,CAAAnE,SAAA,CACEiD,cAACM,EAAM,IACPN,cAAA,OAAKY,UAAU,iBAAgB7D,SAC7B8D,eAAC+J,IAAM,CAAA7N,SAAA,CACLiD,cAAC6K,IAAK,CACJC,KAAK,IACLC,QACiB,aAAX,OAAJ/O,QAAI,IAAJA,OAAI,EAAJA,EAAMiF,MACFjB,cAACqP,IAAQ,CAACtO,GAAG,WAAWuO,SAAO,IAC/BtP,cAACqP,IAAQ,CAACtO,GAAG,WAAWuO,SAAO,MAGvCtP,cAAC6K,IAAK,CACJC,KAAK,aACLC,QACiB,aAAX,OAAJ/O,QAAI,IAAJA,OAAI,EAAJA,EAAMiF,MACFjB,cAAC2K,EAAgB,IACjB3K,cAACqP,IAAQ,CAACtO,GAAG,WAAWuO,SAAO,MAGvCtP,cAAC6K,IAAK,CACJC,KAAK,aACLC,QACiB,aAAX,OAAJ/O,QAAI,IAAJA,OAAI,EAAJA,EAAMiF,MACFjB,cAAC0O,EAAgB,IACjB1O,cAACqP,IAAQ,CAACtO,GAAG,WAAWuO,SAAO,MAGvCtP,cAAC6K,IAAK,CAACC,KAAK,WAAWC,QAAS/K,cAAC2O,EAAO,MACxC3O,cAAC6K,IAAK,CAACC,KAAK,IAAIC,QAAS/K,cAACqP,IAAQ,CAACtO,GAAG,IAAIuO,SAAO,eA5CvD5R,QAAQC,IAAI,iDAEVqC,cAAA,OAAKY,UAAU,YAAW7D,SACxB8D,eAAC+J,IAAM,CAAA7N,SAAA,CACLiD,cAAC6K,IAAK,CAACC,KAAK,SAASC,QAAS/K,cAACyB,EAAK,MACpCzB,cAAC6K,IAAK,CAACC,KAAK,YAAYC,QAAS/K,cAACgD,EAAQ,MAC1ChD,cAAC6K,IAAK,CAACC,KAAK,mBAAmBC,QAAS/K,cAACgE,EAAc,MACvDhE,cAAC6K,IAAK,CAACC,KAAK,yBAAyBC,QAAS/K,cAACuE,EAAa,MAC5DvE,cAAC6K,IAAK,CAACC,KAAK,IAAIC,QAAS/K,cAACqP,IAAQ,CAACtO,GAAG,SAASuO,SAAO,aCrBnDC,IAASC,WAAW7G,SAAS8G,eAAe,SACpD3B,OACH9N,cAAC0P,IAAMC,WAAU,CAAA5S,SACfiD,cAAC4P,IAAa,CAAA7S,SACZ8D,eAAChE,EAAY,CAAAE,SAAA,CACXiD,cAACoP,EAAG,IACJpP,cAAC6P,IAAc,CACb7C,SAAS,YACT8C,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,W","file":"static/js/main.2f948856.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst AuthContext = createContext();\n\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false, // Always start as false, let checkAuth determine this\n  loading: true,\n  error: null\n};\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.data,\n        token: action.payload.data.token,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      };\n    case 'LOGIN_FAILURE':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: null\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: { ...state.user, ...action.payload }\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Set up axios defaults\n  useEffect(() => {\n    if (state.token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\n      localStorage.setItem('token', state.token);\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n      localStorage.removeItem('token');\n    }\n  }, [state.token]);\n\n  // Check if user is authenticated on app load only\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      console.log('AuthContext - Checking auth with token:', token ? 'Present' : 'Missing');\n      \n      if (token) {\n        try {\n          // Set token in axios headers before making the request\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n          console.log('AuthContext - Set axios header with token');\n          \n          const response = await axios.get('/api/auth/me');\n          console.log('AuthContext - Auth check successful:', response.data.data);\n          \n          dispatch({\n            type: 'LOGIN_SUCCESS',\n            payload: { data: response.data.data }\n          });\n        } catch (error) {\n          console.error('AuthContext - Auth check failed:', error);\n          // Clear everything on auth failure\n          delete axios.defaults.headers.common['Authorization'];\n          localStorage.removeItem('token');\n          dispatch({ type: 'LOGOUT' });\n        }\n      } else {\n        console.log('AuthContext - No token found, setting loading to false');\n        // If no token, make sure we're not authenticated\n        dispatch({ type: 'SET_LOADING', payload: false });\n        if (state.isAuthenticated) {\n          dispatch({ type: 'LOGOUT' });\n        }\n      }\n    };\n\n    checkAuth();\n  }, []); // Empty dependency array - only run on mount\n\n  const login = async (email, password) => {\n    console.log('AuthContext - Starting login process');\n    dispatch({ type: 'LOGIN_START' });\n    \n    try {\n      const response = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      \n      console.log('AuthContext - Login response:', response.data);\n      \n      // Set token immediately in axios headers and localStorage\n      const token = response.data.data.token;\n      const userData = response.data.data;\n      \n      console.log('AuthContext - Setting token:', token ? 'Present' : 'Missing');\n      console.log('AuthContext - User data:', userData);\n      \n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      localStorage.setItem('token', token);\n      \n      // Dispatch success with user data (not the full response)\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: { data: userData }\n      });\n      \n      console.log('AuthContext - Login successful, user data:', userData);\n      toast.success('Login successful!');\n      return { success: true, user: userData };\n    } catch (error) {\n      console.error('AuthContext - Login failed:', error);\n      const message = error.response?.data?.message || 'Login failed';\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: message\n      });\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const register = async (userData) => {\n    dispatch({ type: 'LOGIN_START' });\n    \n    try {\n      const response = await axios.post('/api/auth/register', userData);\n      \n      // Set token immediately in axios headers\n      const token = response.data.data.token;\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      localStorage.setItem('token', token);\n      \n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: response.data\n      });\n      \n      toast.success('Registration successful!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Registration failed';\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: message\n      });\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const logout = () => {\n    // Clear everything\n    delete axios.defaults.headers.common['Authorization'];\n    localStorage.removeItem('token');\n    dispatch({ type: 'LOGOUT' });\n    toast.info('Logged out successfully');\n  };\n\n  const clearAuthState = () => {\n    console.log('AuthContext - Clearing corrupted auth state');\n    delete axios.defaults.headers.common['Authorization'];\n    localStorage.removeItem('token');\n    sessionStorage.clear();\n    dispatch({ type: 'LOGOUT' });\n    \n    // Force a page reload to clear any cached state\n    setTimeout(() => {\n      window.location.reload();\n    }, 100);\n  };\n\n  const updateProfile = async (profileData) => {\n    try {\n      const response = await axios.put('/api/auth/me', profileData);\n      dispatch({\n        type: 'UPDATE_USER',\n        payload: response.data.data\n      });\n      toast.success('Profile updated successfully!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Profile update failed';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      await axios.put('/api/auth/change-password', {\n        currentPassword,\n        newPassword\n      });\n      toast.success('Password changed successfully!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Password change failed';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const value = {\n    user: state.user,\n    token: state.token,\n    isAuthenticated: state.isAuthenticated,\n    loading: state.loading,\n    error: state.error,\n    login,\n    register,\n    logout,\n    clearAuthState,\n    updateProfile,\n    changePassword\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}; ","import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { FaUser, FaSignOutAlt, FaCog } from 'react-icons/fa';\r\n\r\nconst Navbar = () => {\r\n  const { user, logout } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    navigate('/login');\r\n  };\r\n\r\n  const getDashboardLink = () => {\r\n    return user?.role === 'teacher' ? '/teacher' : '/student';\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n      <div className=\"container\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          📱 QR Attendance System\r\n        </Link>\r\n\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarNav\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav me-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to={getDashboardLink()}>\r\n                Dashboard\r\n              </Link>\r\n            </li>\r\n            {user?.role === 'teacher' && (\r\n              <>\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link\" to=\"/teacher/qr-generate\">\r\n                    Generate QR\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link\" to=\"/teacher/attendance\">\r\n                    View Attendance\r\n                  </Link>\r\n                </li>\r\n              </>\r\n            )}\r\n            {user?.role === 'student' && (\r\n              <>\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link\" to=\"/student/scan\">\r\n                    Scan QR\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link\" to=\"/student/my-attendance\">\r\n                    My Attendance\r\n                  </Link>\r\n                </li>\r\n              </>\r\n            )}\r\n          </ul>\r\n\r\n          <div className=\"navbar-nav\">\r\n            <div className=\"nav-item dropdown\">\r\n              <button\r\n                className=\"btn btn-link nav-link dropdown-toggle\"\r\n                onClick={() => setShowDropdown(!showDropdown)}\r\n              >\r\n                <FaUser className=\"me-1\" />\r\n                {user?.name}\r\n              </button>\r\n              {showDropdown && (\r\n                <div className=\"dropdown-menu show\">\r\n                  <Link className=\"dropdown-item\" to=\"/profile\">\r\n                    <FaCog className=\"me-2\" />\r\n                    Profile\r\n                  </Link>\r\n                  <button\r\n                    className=\"dropdown-item\"\r\n                    onClick={handleLogout}\r\n                  >\r\n                    <FaSignOutAlt className=\"me-2\" />\r\n                    Logout\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar; ","import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { FaEnvelope, FaLock, FaEye, FaEyeSlash } from 'react-icons/fa';\n\nconst Login = () => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [loading, setLoading] = useState(false);\n  \n  const { login } = useAuth();\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      const result = await login(formData.email, formData.password);\n      if (result.success) {\n        console.log('Login successful, navigating...');\n        console.log('User data:', result.user);\n        \n        // Navigate based on user role\n        const userRole = result.user?.role;\n        if (userRole === 'teacher') {\n          navigate('/teacher');\n        } else if (userRole === 'student') {\n          navigate('/student');\n        } else {\n          navigate('/');\n        }\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"row justify-content-center align-items-center min-vh-100\">\n      <div className=\"col-md-6 col-lg-4\">\n        <div className=\"card\">\n          <div className=\"card-body p-5\">\n            <div className=\"text-center mb-4\">\n              <h2 className=\"fw-bold text-primary\">Welcome Back</h2>\n              <p className=\"text-muted\">Sign in to your account</p>\n            </div>\n\n            <form onSubmit={handleSubmit}>\n              <div className=\"mb-3\">\n                <label htmlFor=\"email\" className=\"form-label\">\n                  Email Address\n                </label>\n                <div className=\"input-group\">\n                  <span className=\"input-group-text\">\n                    <FaEnvelope />\n                  </span>\n                  <input\n                    type=\"email\"\n                    className=\"form-control\"\n                    id=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleChange}\n                    required\n                    placeholder=\"Enter your email\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"mb-4\">\n                <label htmlFor=\"password\" className=\"form-label\">\n                  Password\n                </label>\n                <div className=\"input-group\">\n                  <span className=\"input-group-text\">\n                    <FaLock />\n                  </span>\n                  <input\n                    type={showPassword ? 'text' : 'password'}\n                    className=\"form-control\"\n                    id=\"password\"\n                    name=\"password\"\n                    value={formData.password}\n                    onChange={handleChange}\n                    required\n                    placeholder=\"Enter your password\"\n                  />\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-outline-secondary\"\n                    onClick={() => setShowPassword(!showPassword)}\n                  >\n                    {showPassword ? <FaEyeSlash /> : <FaEye />}\n                  </button>\n                </div>\n              </div>\n\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary w-100 mb-3\"\n                disabled={loading}\n              >\n                {loading ? (\n                  <>\n                    <span className=\"spinner-border spinner-border-sm me-2\" />\n                    Signing In...\n                  </>\n                ) : (\n                  'Sign In'\n                )}\n              </button>\n\n              <div className=\"text-center\">\n                <p className=\"mb-0\">\n                  Don't have an account?{' '}\n                  <Link to=\"/register\" className=\"text-primary fw-bold\">\n                    Sign up here\n                  </Link>\n                </p>\n                <p className=\"mt-2 mb-0\">\n                  <Link to=\"/forgot-password\" className=\"text-muted text-decoration-none\">\n                    Forgot your password?\n                  </Link>\n                </p>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login; ","import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { FaUser, FaEnvelope, FaLock, FaEye, FaEyeSlash, FaIdCard, FaGraduationCap, FaPhone } from 'react-icons/fa';\n\nconst Register = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    mobileNumber: '',\n    password: '',\n    confirmPassword: '',\n    role: 'student',\n    studentId: '',\n    department: '',\n    year: 1\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [loading, setLoading] = useState(false);\n  \n  const { register } = useAuth();\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    // Validate passwords match\n    if (formData.password !== formData.confirmPassword) {\n      alert('Passwords do not match');\n      setLoading(false);\n      return;\n    }\n\n    // Validate password length\n    if (formData.password.length < 6) {\n      alert('Password must be at least 6 characters long');\n      setLoading(false);\n      return;\n    }\n\n    // Validate mobile number format\n    const mobileRegex = /^[0-9]{10}$/;\n    if (formData.mobileNumber && !mobileRegex.test(formData.mobileNumber)) {\n      alert('Mobile number must be exactly 10 digits');\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const userData = {\n        name: formData.name,\n        email: formData.email,\n        mobileNumber: formData.mobileNumber,\n        password: formData.password,\n        role: formData.role\n      };\n\n      // Add student-specific fields if role is student\n      if (formData.role === 'student') {\n        userData.studentId = formData.studentId;\n        userData.department = formData.department;\n        userData.year = parseInt(formData.year);\n      }\n\n      const result = await register(userData);\n      if (result.success) {\n        navigate('/');\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"row justify-content-center align-items-center min-vh-100\">\n      <div className=\"col-md-8 col-lg-6\">\n        <div className=\"card\">\n          <div className=\"card-body p-5\">\n            <div className=\"text-center mb-4\">\n              <h2 className=\"fw-bold text-primary\">Create Account</h2>\n              <p className=\"text-muted\">Join the QR Attendance System</p>\n            </div>\n\n            <form onSubmit={handleSubmit}>\n              <div className=\"mb-3\">\n                <label htmlFor=\"role\" className=\"form-label\">\n                  Role\n                </label>\n                <select\n                  className=\"form-select\"\n                  id=\"role\"\n                  name=\"role\"\n                  value={formData.role}\n                  onChange={handleChange}\n                  required\n                >\n                  <option value=\"student\">Student</option>\n                  <option value=\"teacher\">Teacher</option>\n                </select>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col-md-6 mb-3\">\n                  <label htmlFor=\"name\" className=\"form-label\">\n                    Full Name\n                  </label>\n                  <div className=\"input-group\">\n                    <span className=\"input-group-text\">\n                      <FaUser />\n                    </span>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"name\"\n                      name=\"name\"\n                      value={formData.name}\n                      onChange={handleChange}\n                      required\n                      placeholder=\"Enter your full name\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-md-6 mb-3\">\n                  <label htmlFor=\"email\" className=\"form-label\">\n                    Email Address\n                  </label>\n                  <div className=\"input-group\">\n                    <span className=\"input-group-text\">\n                      <FaEnvelope />\n                    </span>\n                    <input\n                      type=\"email\"\n                      className=\"form-control\"\n                      id=\"email\"\n                      name=\"email\"\n                      value={formData.email}\n                      onChange={handleChange}\n                      required\n                      placeholder=\"Enter your email\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"mb-3\">\n                <label htmlFor=\"mobileNumber\" className=\"form-label\">\n                  Mobile Number\n                </label>\n                <div className=\"input-group\">\n                  <span className=\"input-group-text\">\n                    <FaPhone />\n                  </span>\n                  <input\n                    type=\"tel\"\n                    className=\"form-control\"\n                    id=\"mobileNumber\"\n                    name=\"mobileNumber\"\n                    value={formData.mobileNumber}\n                    onChange={handleChange}\n                    required\n                    placeholder=\"Enter your 10-digit mobile number\"\n                    maxLength=\"10\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col-md-6 mb-3\">\n                  <label htmlFor=\"password\" className=\"form-label\">\n                    Password\n                  </label>\n                  <div className=\"input-group\">\n                    <span className=\"input-group-text\">\n                      <FaLock />\n                    </span>\n                    <input\n                      type={showPassword ? 'text' : 'password'}\n                      className=\"form-control\"\n                      id=\"password\"\n                      name=\"password\"\n                      value={formData.password}\n                      onChange={handleChange}\n                      required\n                      placeholder=\"Enter password\"\n                    />\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-outline-secondary\"\n                      onClick={() => setShowPassword(!showPassword)}\n                    >\n                      {showPassword ? <FaEyeSlash /> : <FaEye />}\n                    </button>\n                  </div>\n                </div>\n\n                <div className=\"col-md-6 mb-3\">\n                  <label htmlFor=\"confirmPassword\" className=\"form-label\">\n                    Confirm Password\n                  </label>\n                  <div className=\"input-group\">\n                    <span className=\"input-group-text\">\n                      <FaLock />\n                    </span>\n                    <input\n                      type={showConfirmPassword ? 'text' : 'password'}\n                      className=\"form-control\"\n                      id=\"confirmPassword\"\n                      name=\"confirmPassword\"\n                      value={formData.confirmPassword}\n                      onChange={handleChange}\n                      required\n                      placeholder=\"Confirm password\"\n                    />\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-outline-secondary\"\n                      onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                    >\n                      {showConfirmPassword ? <FaEyeSlash /> : <FaEye />}\n                    </button>\n                  </div>\n                </div>\n              </div>\n\n              {formData.role === 'student' && (\n                <>\n                  <div className=\"row\">\n                    <div className=\"col-md-4 mb-3\">\n                      <label htmlFor=\"studentId\" className=\"form-label\">\n                        Student ID\n                      </label>\n                      <div className=\"input-group\">\n                        <span className=\"input-group-text\">\n                          <FaIdCard />\n                        </span>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"studentId\"\n                          name=\"studentId\"\n                          value={formData.studentId}\n                          onChange={handleChange}\n                          required\n                          placeholder=\"Enter student ID\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-4 mb-3\">\n                      <label htmlFor=\"department\" className=\"form-label\">\n                        Department\n                      </label>\n                      <div className=\"input-group\">\n                        <span className=\"input-group-text\">\n                          <FaGraduationCap />\n                        </span>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"department\"\n                          name=\"department\"\n                          value={formData.department}\n                          onChange={handleChange}\n                          required\n                          placeholder=\"Enter department\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-4 mb-3\">\n                      <label htmlFor=\"year\" className=\"form-label\">\n                        Year\n                      </label>\n                      <select\n                        className=\"form-select\"\n                        id=\"year\"\n                        name=\"year\"\n                        value={formData.year}\n                        onChange={handleChange}\n                        required\n                      >\n                        <option value={1}>1st Year</option>\n                        <option value={2}>2nd Year</option>\n                        <option value={3}>3rd Year</option>\n                        <option value={4}>4th Year</option>\n                        <option value={5}>5th Year</option>\n                      </select>\n                    </div>\n                  </div>\n                </>\n              )}\n\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary w-100 mb-3\"\n                disabled={loading}\n              >\n                {loading ? (\n                  <>\n                    <span className=\"spinner-border spinner-border-sm me-2\" />\n                    Creating Account...\n                  </>\n                ) : (\n                  'Create Account'\n                )}\n              </button>\n\n              <div className=\"text-center\">\n                <p className=\"mb-0\">\n                  Already have an account?{' '}\n                  <Link to=\"/login\" className=\"text-primary fw-bold\">\n                    Sign in here\n                  </Link>\n                </p>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Register; ","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { FaEnvelope, FaArrowLeft } from 'react-icons/fa';\r\n\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [emailSent, setEmailSent] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await axios.post('/api/auth/forgot-password', { email });\r\n      \r\n      if (response.data.success) {\r\n        setEmailSent(true);\r\n        toast.success('Password reset email sent successfully!');\r\n      }\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Failed to send reset email';\r\n      toast.error(message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (emailSent) {\r\n    return (\r\n      <div className=\"row justify-content-center align-items-center min-vh-100\">\r\n        <div className=\"col-md-6 col-lg-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body p-5 text-center\">\r\n              <div className=\"mb-4\">\r\n                <FaEnvelope className=\"text-primary\" style={{ fontSize: '3rem' }} />\r\n              </div>\r\n              <h3 className=\"fw-bold text-primary mb-3\">Check Your Email</h3>\r\n              <p className=\"text-muted mb-4\">\r\n                We've sent a password reset link to <strong>{email}</strong>\r\n              </p>\r\n              <p className=\"text-muted small mb-4\">\r\n                If you don't see the email, check your spam folder or try again.\r\n              </p>\r\n              <button\r\n                className=\"btn btn-outline-primary me-2\"\r\n                onClick={() => setEmailSent(false)}\r\n              >\r\n                Try Again\r\n              </button>\r\n              <Link to=\"/login\" className=\"btn btn-primary\">\r\n                Back to Login\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"row justify-content-center align-items-center min-vh-100\">\r\n      <div className=\"col-md-6 col-lg-4\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body p-5\">\r\n            <div className=\"text-center mb-4\">\r\n              <h2 className=\"fw-bold text-primary\">Forgot Password</h2>\r\n              <p className=\"text-muted\">Enter your email to reset your password</p>\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"mb-4\">\r\n                <label htmlFor=\"email\" className=\"form-label\">\r\n                  Email Address\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <span className=\"input-group-text\">\r\n                    <FaEnvelope />\r\n                  </span>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    id=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required\r\n                    placeholder=\"Enter your email\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary w-100 mb-3\"\r\n                disabled={loading}\r\n              >\r\n                {loading ? (\r\n                  <>\r\n                    <span className=\"spinner-border spinner-border-sm me-2\" />\r\n                    Sending...\r\n                  </>\r\n                ) : (\r\n                  'Send Reset Link'\r\n                )}\r\n              </button>\r\n\r\n              <div className=\"text-center\">\r\n                <Link to=\"/login\" className=\"text-decoration-none\">\r\n                  <FaArrowLeft className=\"me-1\" />\r\n                  Back to Login\r\n                </Link>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword; ","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { FaLock, FaEye, FaEyeSlash, FaCheck } from 'react-icons/fa';\r\n\r\nconst ResetPassword = () => {\r\n  const [formData, setFormData] = useState({\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [validating, setValidating] = useState(true);\r\n  const [tokenValid, setTokenValid] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const { token } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    validateToken();\r\n  }, [token]);\r\n\r\n  const validateToken = async () => {\r\n    try {\r\n      const response = await axios.get(`/api/auth/reset-password/${token}`);\r\n      if (response.data.success) {\r\n        setTokenValid(true);\r\n      }\r\n    } catch (error) {\r\n      setTokenValid(false);\r\n      toast.error('Invalid or expired reset link');\r\n    } finally {\r\n      setValidating(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    // Validate passwords match\r\n    if (formData.password !== formData.confirmPassword) {\r\n      toast.error('Passwords do not match');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    // Validate password length\r\n    if (formData.password.length < 6) {\r\n      toast.error('Password must be at least 6 characters long');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(`/api/auth/reset-password/${token}`, {\r\n        password: formData.password\r\n      });\r\n\r\n      if (response.data.success) {\r\n        setSuccess(true);\r\n        toast.success('Password reset successfully!');\r\n        setTimeout(() => {\r\n          navigate('/login');\r\n        }, 2000);\r\n      }\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Failed to reset password';\r\n      toast.error(message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (validating) {\r\n    return (\r\n      <div className=\"row justify-content-center align-items-center min-vh-100\">\r\n        <div className=\"col-md-6 col-lg-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body p-5 text-center\">\r\n              <div className=\"spinner-border text-primary\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n              <p className=\"mt-3 text-muted\">Validating reset link...</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!tokenValid) {\r\n    return (\r\n      <div className=\"row justify-content-center align-items-center min-vh-100\">\r\n        <div className=\"col-md-6 col-lg-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body p-5 text-center\">\r\n              <h3 className=\"fw-bold text-danger mb-3\">Invalid Reset Link</h3>\r\n              <p className=\"text-muted mb-4\">\r\n                This password reset link is invalid or has expired.\r\n              </p>\r\n              <Link to=\"/forgot-password\" className=\"btn btn-primary\">\r\n                Request New Reset Link\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (success) {\r\n    return (\r\n      <div className=\"row justify-content-center align-items-center min-vh-100\">\r\n        <div className=\"col-md-6 col-lg-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body p-5 text-center\">\r\n              <div className=\"mb-4\">\r\n                <FaCheck className=\"text-success\" style={{ fontSize: '3rem' }} />\r\n              </div>\r\n              <h3 className=\"fw-bold text-success mb-3\">Password Reset Successfully!</h3>\r\n              <p className=\"text-muted mb-4\">\r\n                Your password has been updated. You will be redirected to login shortly.\r\n              </p>\r\n              <Link to=\"/login\" className=\"btn btn-primary\">\r\n                Go to Login\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"row justify-content-center align-items-center min-vh-100\">\r\n      <div className=\"col-md-6 col-lg-4\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body p-5\">\r\n            <div className=\"text-center mb-4\">\r\n              <h2 className=\"fw-bold text-primary\">Reset Password</h2>\r\n              <p className=\"text-muted\">Enter your new password</p>\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"password\" className=\"form-label\">\r\n                  New Password\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <span className=\"input-group-text\">\r\n                    <FaLock />\r\n                  </span>\r\n                  <input\r\n                    type={showPassword ? 'text' : 'password'}\r\n                    className=\"form-control\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    value={formData.password}\r\n                    onChange={handleChange}\r\n                    required\r\n                    placeholder=\"Enter new password\"\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-secondary\"\r\n                    onClick={() => setShowPassword(!showPassword)}\r\n                  >\r\n                    {showPassword ? <FaEyeSlash /> : <FaEye />}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mb-4\">\r\n                <label htmlFor=\"confirmPassword\" className=\"form-label\">\r\n                  Confirm New Password\r\n                </label>\r\n                <div className=\"input-group\">\r\n                  <span className=\"input-group-text\">\r\n                    <FaLock />\r\n                  </span>\r\n                  <input\r\n                    type={showConfirmPassword ? 'text' : 'password'}\r\n                    className=\"form-control\"\r\n                    id=\"confirmPassword\"\r\n                    name=\"confirmPassword\"\r\n                    value={formData.confirmPassword}\r\n                    onChange={handleChange}\r\n                    required\r\n                    placeholder=\"Confirm new password\"\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-secondary\"\r\n                    onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n                  >\r\n                    {showConfirmPassword ? <FaEyeSlash /> : <FaEye />}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary w-100 mb-3\"\r\n                disabled={loading}\r\n              >\r\n                {loading ? (\r\n                  <>\r\n                    <span className=\"spinner-border spinner-border-sm me-2\" />\r\n                    Resetting Password...\r\n                  </>\r\n                ) : (\r\n                  'Reset Password'\r\n                )}\r\n              </button>\r\n\r\n              <div className=\"text-center\">\r\n                <Link to=\"/login\" className=\"text-decoration-none\">\r\n                  Back to Login\r\n                </Link>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword; ","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { FaQrcode, FaUsers, FaChartBar, FaCalendarAlt } from 'react-icons/fa';\r\n\r\nconst DashboardHome = () => {\r\n  const [stats, setStats] = useState({\r\n    todayAttendance: 0,\r\n    activeQRCodes: 0,\r\n    totalStudents: 0,\r\n    recentActivity: []\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchDashboardStats();\r\n  }, []);\r\n\r\n  const fetchDashboardStats = async () => {\r\n    try {\r\n      const today = new Date().toISOString().split('T')[0];\r\n      \r\n      // Fetch today's attendance\r\n      const attendanceResponse = await axios.get(`/api/attendance/daily?date=${today}`);\r\n      const attendanceData = attendanceResponse.data.data;\r\n      \r\n      // Fetch active QR codes\r\n      const qrResponse = await axios.get('/api/qr/active');\r\n      const activeQRCodes = qrResponse.data.count;\r\n      \r\n      // Fetch total students\r\n      const studentsResponse = await axios.get('/api/auth/students');\r\n      const totalStudents = studentsResponse.data.count;\r\n\r\n      setStats({\r\n        todayAttendance: attendanceData.stats.total,\r\n        activeQRCodes,\r\n        totalStudents,\r\n        recentActivity: attendanceData.attendance.slice(0, 5)\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching dashboard stats:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-spinner\">\r\n        <div className=\"spinner-border\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row mb-4\">\r\n        <div className=\"col-12\">\r\n          <h2 className=\"fw-bold text-white\">Teacher Dashboard</h2>\r\n          <p className=\"text-white-50\">Welcome back! Here's your overview for today.</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stats Cards */}\r\n      <div className=\"row mb-4\">\r\n        <div className=\"col-md-3 mb-3\">\r\n          <div className=\"stats-card\">\r\n            <div className=\"stats-number\">{stats.todayAttendance}</div>\r\n            <div className=\"stats-label\">Today's Attendance</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\">\r\n          <div className=\"stats-card\">\r\n            <div className=\"stats-number\">{stats.activeQRCodes}</div>\r\n            <div className=\"stats-label\">Active QR Codes</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\">\r\n          <div className=\"stats-card\">\r\n            <div className=\"stats-number\">{stats.totalStudents}</div>\r\n            <div className=\"stats-label\">Total Students</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\">\r\n          <div className=\"stats-card\">\r\n            <div className=\"stats-number\">\r\n              {stats.totalStudents > 0 \r\n                ? Math.round((stats.todayAttendance / stats.totalStudents) * 100)\r\n                : 0}%\r\n            </div>\r\n            <div className=\"stats-label\">Attendance Rate</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Quick Actions */}\r\n      <div className=\"row mb-4\">\r\n        <div className=\"col-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title mb-3\">Quick Actions</h5>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-3 mb-3\">\r\n                  <Link to=\"/teacher/qr-generate\" className=\"text-decoration-none\">\r\n                    <div className=\"card text-center h-100\">\r\n                      <div className=\"card-body\">\r\n                        <FaQrcode className=\"text-primary mb-3\" size={40} />\r\n                        <h6 className=\"card-title\">Generate QR Code</h6>\r\n                        <p className=\"card-text text-muted\">Create a new QR code for attendance</p>\r\n                      </div>\r\n                    </div>\r\n                  </Link>\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                  <Link to=\"/teacher/attendance\" className=\"text-decoration-none\">\r\n                    <div className=\"card text-center h-100\">\r\n                      <div className=\"card-body\">\r\n                        <FaUsers className=\"text-success mb-3\" size={40} />\r\n                        <h6 className=\"card-title\">View Attendance</h6>\r\n                        <p className=\"card-text text-muted\">Check today's attendance records</p>\r\n                      </div>\r\n                    </div>\r\n                  </Link>\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                  <Link to=\"/teacher/attendance\" className=\"text-decoration-none\">\r\n                    <div className=\"card text-center h-100\">\r\n                      <div className=\"card-body\">\r\n                        <FaChartBar className=\"text-warning mb-3\" size={40} />\r\n                        <h6 className=\"card-title\">Analytics</h6>\r\n                        <p className=\"card-text text-muted\">View attendance statistics</p>\r\n                      </div>\r\n                    </div>\r\n                  </Link>\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                  <Link to=\"/teacher/attendance\" className=\"text-decoration-none\">\r\n                    <div className=\"card text-center h-100\">\r\n                      <div className=\"card-body\">\r\n                        <FaCalendarAlt className=\"text-info mb-3\" size={40} />\r\n                        <h6 className=\"card-title\">History</h6>\r\n                        <p className=\"card-text text-muted\">View past attendance records</p>\r\n                      </div>\r\n                    </div>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Recent Activity */}\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title mb-3\">Recent Activity</h5>\r\n              {stats.recentActivity.length > 0 ? (\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table table-hover\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Student</th>\r\n                        <th>Mobile Number</th>\r\n                        <th>Description</th>\r\n                        <th>Coordinates</th>\r\n                        <th>Time</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {stats.recentActivity.map((record) => (\r\n                        <tr key={record._id}>\r\n                          <td>\r\n                            <strong>{record.student.name}</strong>\r\n                            <br />\r\n                            <small className=\"text-muted\">{record.student.studentId}</small>\r\n                          </td>\r\n                          <td>{record.student.mobileNumber}</td>\r\n                          <td>{record.qrCode?.description || 'N/A'}</td>\r\n                          <td>\r\n                            {record.coordinates && record.coordinates.latitude && record.coordinates.longitude ? (\r\n                              <small className=\"text-muted\">\r\n                                {record.coordinates.latitude.toFixed(6)}, {record.coordinates.longitude.toFixed(6)}\r\n                              </small>\r\n                            ) : (\r\n                              <small className=\"text-muted\">N/A</small>\r\n                            )}\r\n                          </td>\r\n                          <td>\r\n                            {new Date(record.markedAt).toLocaleTimeString()}\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              ) : (\r\n                <p className=\"text-muted text-center\">No recent activity</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardHome; ","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { FaQrcode, FaCopy, FaDownload, FaClock } from 'react-icons/fa';\nimport { useAuth } from '../../contexts/AuthContext';\n\nconst QRGenerator = () => {\n  const { user, isAuthenticated, token } = useAuth();\n  const [formData, setFormData] = useState({\n    description: '',\n    location: '',\n    course: '',\n    validityMinutes: 10\n  });\n  const [generatedQR, setGeneratedQR] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const generateQR = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    // Check authentication\n    if (!isAuthenticated || !token) {\n      toast.error('You must be logged in to generate QR codes');\n      setLoading(false);\n      return;\n    }\n\n    // Check if user is a teacher\n    if (user?.role !== 'teacher') {\n      toast.error('Only teachers can generate QR codes');\n      setLoading(false);\n      return;\n    }\n\n    console.log('Generating QR code with token:', token ? 'Present' : 'Missing');\n    console.log('User:', user);\n    console.log('Axios headers:', axios.defaults.headers.common);\n\n    try {\n      const response = await axios.post('/api/qr/generate', formData);\n      setGeneratedQR(response.data.data);\n      toast.success('QR Code generated successfully!');\n    } catch (error) {\n      console.error('QR generation error:', error);\n      const message = error.response?.data?.message || 'Failed to generate QR code';\n      toast.error(message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const copyToClipboard = () => {\n    if (generatedQR) {\n      navigator.clipboard.writeText(generatedQR.code);\n      toast.success('QR Code copied to clipboard!');\n    }\n  };\n\n  const downloadQR = () => {\n    if (generatedQR) {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      const img = new Image();\n      \n      img.onload = () => {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.drawImage(img, 0, 0);\n        \n        const link = document.createElement('a');\n        link.download = `qr-code-${generatedQR.code}.png`;\n        link.href = canvas.toDataURL();\n        link.click();\n      };\n      \n      img.src = generatedQR.qrCodeImage;\n    }\n  };\n\n  // Debug authentication state\n  console.log('QR Generator - Auth State:', {\n    isAuthenticated,\n    user,\n    token: token ? 'Present' : 'Missing',\n    userRole: user?.role\n  });\n\n  // Show loading if authentication is still being checked\n  if (!isAuthenticated && !user) {\n    return (\n      <div className=\"loading-spinner\">\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n        <p className=\"mt-2 text-white\">Checking authentication...</p>\n      </div>\n    );\n  }\n\n  // Show error if user is not a teacher\n  if (user && user.role !== 'teacher') {\n    return (\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-6\">\n          <div className=\"card\">\n            <div className=\"card-body text-center\">\n              <h3 className=\"text-danger\">Access Denied</h3>\n              <p>Only teachers can generate QR codes.</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"row mb-4\">\n        <div className=\"col-12\">\n          <h2 className=\"fw-bold text-white\">Generate QR Code</h2>\n          <p className=\"text-white-50\">Create a new QR code for student attendance</p>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title mb-3\">QR Code Settings</h5>\n              <form onSubmit={generateQR}>\n                <div className=\"mb-3\">\n                  <label htmlFor=\"description\" className=\"form-label\">\n                    Description\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"description\"\n                    name=\"description\"\n                    value={formData.description}\n                    onChange={handleChange}\n                    placeholder=\"e.g., Morning Class Attendance\"\n                  />\n                </div>\n\n                <div className=\"mb-3\">\n                  <label htmlFor=\"location\" className=\"form-label\">\n                    Location\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"location\"\n                    name=\"location\"\n                    value={formData.location}\n                    onChange={handleChange}\n                    placeholder=\"e.g., Room 101\"\n                  />\n                </div>\n\n                <div className=\"mb-3\">\n                  <label htmlFor=\"course\" className=\"form-label\">\n                    Course/Subject\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"course\"\n                    name=\"course\"\n                    value={formData.course}\n                    onChange={handleChange}\n                    placeholder=\"e.g., Computer Science\"\n                  />\n                </div>\n\n                <div className=\"mb-4\">\n                  <label htmlFor=\"validityMinutes\" className=\"form-label\">\n                    Validity (minutes)\n                  </label>\n                  <div className=\"input-group\">\n                    <span className=\"input-group-text\">\n                      <FaClock />\n                    </span>\n                    <input\n                      type=\"number\"\n                      className=\"form-control\"\n                      id=\"validityMinutes\"\n                      name=\"validityMinutes\"\n                      value={formData.validityMinutes}\n                      onChange={handleChange}\n                      min=\"1\"\n                      max=\"60\"\n                    />\n                  </div>\n                  <small className=\"text-muted\">\n                    QR code will expire after this time\n                  </small>\n                </div>\n\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary w-100\"\n                  disabled={loading}\n                >\n                  {loading ? (\n                    <>\n                      <span className=\"spinner-border spinner-border-sm me-2\" />\n                      Generating QR Code...\n                    </>\n                  ) : (\n                    <>\n                      <FaQrcode className=\"me-2\" />\n                      Generate QR Code\n                    </>\n                  )}\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-md-6\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title mb-3\">Generated QR Code</h5>\n              \n              {generatedQR ? (\n                <div className=\"text-center\">\n                  <div className=\"qr-container mb-3\">\n                    <img \n                      src={generatedQR.qrCodeImage} \n                      alt=\"QR Code\" \n                      className=\"img-fluid\"\n                      style={{ maxWidth: '300px' }}\n                    />\n                  </div>\n                  \n                  <div className=\"mb-3\">\n                    <strong>Code:</strong> {generatedQR.code}\n                  </div>\n                  \n                  <div className=\"mb-3\">\n                    <strong>Expires:</strong> {new Date(generatedQR.expiresAt).toLocaleString()}\n                  </div>\n                  \n                  <div className=\"d-grid gap-2\">\n                    <button\n                      className=\"btn btn-outline-primary\"\n                      onClick={copyToClipboard}\n                    >\n                      <FaCopy className=\"me-2\" />\n                      Copy Code\n                    </button>\n                    <button\n                      className=\"btn btn-outline-success\"\n                      onClick={downloadQR}\n                    >\n                      <FaDownload className=\"me-2\" />\n                      Download QR\n                    </button>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"text-center text-muted\">\n                  <FaQrcode size={100} className=\"mb-3\" />\n                  <p>Generate a QR code to see it here</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {generatedQR && (\n        <div className=\"row mt-4\">\n          <div className=\"col-12\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title mb-3\">QR Code Details</h5>\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <p><strong>Description:</strong> {generatedQR.description}</p>\n                    <p><strong>Location:</strong> {generatedQR.location}</p>\n                  </div>\n                  <div className=\"col-md-6\">\n                    <p><strong>Course/Subject:</strong> {generatedQR.course}</p>\n                    <p><strong>Generated:</strong> {new Date(generatedQR.generatedAt).toLocaleString()}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default QRGenerator; ","import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { FaCalendarAlt, FaTrash, FaDownload, FaEye } from 'react-icons/fa';\n\nconst AttendanceView = () => {\n  const [attendance, setAttendance] = useState([]);\n  const [stats, setStats] = useState({});\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [loading, setLoading] = useState(true);\n\n  const fetchAttendance = useCallback(async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`/api/attendance/daily?date=${selectedDate}`);\n      setAttendance(response.data.data.attendance);\n      setStats(response.data.data.stats);\n    } catch (error) {\n      console.error('Error fetching attendance:', error);\n      toast.error('Failed to fetch attendance data');\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedDate]);\n\n  useEffect(() => {\n    fetchAttendance();\n  }, [fetchAttendance]);\n\n  const deleteAttendance = async (id) => {\n    if (window.confirm('Are you sure you want to delete this attendance record?')) {\n      try {\n        await axios.delete(`/api/attendance/${id}`);\n        toast.success('Attendance record deleted successfully');\n        fetchAttendance();\n      } catch (error) {\n        console.error('Error deleting attendance:', error);\n        toast.error('Failed to delete attendance record');\n      }\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"loading-spinner\">\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"row mb-4\">\n        <div className=\"col-12\">\n          <h2 className=\"fw-bold text-white\">Attendance View</h2>\n          <p className=\"text-white-50\">View and manage attendance records</p>\n        </div>\n      </div>\n\n      {/* Date Selector */}\n      <div className=\"row mb-4\">\n        <div className=\"col-md-6\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <label htmlFor=\"date\" className=\"form-label\">\n                <FaCalendarAlt className=\"me-2\" />\n                Select Date\n              </label>\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                id=\"date\"\n                value={selectedDate}\n                onChange={(e) => setSelectedDate(e.target.value)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"row mb-4\">\n        <div className=\"col-md-3 mb-3\">\n          <div className=\"stats-card\">\n            <div className=\"stats-number\">{stats.total || 0}</div>\n            <div className=\"stats-label\">Total Students</div>\n          </div>\n        </div>\n        <div className=\"col-md-3 mb-3\">\n          <div className=\"stats-card\">\n            <div className=\"stats-number\">{stats.present || 0}</div>\n            <div className=\"stats-label\">Present</div>\n          </div>\n        </div>\n        <div className=\"col-md-3 mb-3\">\n          <div className=\"stats-card\">\n            <div className=\"stats-number\">{stats.late || 0}</div>\n            <div className=\"stats-label\">Late</div>\n          </div>\n        </div>\n        <div className=\"col-md-3 mb-3\">\n          <div className=\"stats-card\">\n            <div className=\"stats-number\">\n              {stats.total > 0 ? Math.round(((stats.present || 0) / stats.total) * 100) : 0}%\n            </div>\n            <div className=\"stats-label\">Attendance Rate</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Attendance Table */}\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                <h5 className=\"card-title mb-0\">Attendance Records</h5>\n                <div>\n                  <button\n                    className=\"btn btn-outline-primary btn-sm me-2\"\n                    onClick={() => window.print()}\n                  >\n                    <FaEye className=\"me-1\" />\n                    Print\n                  </button>\n                  <button\n                    className=\"btn btn-outline-success btn-sm\"\n                    onClick={() => {\n                      // Export functionality would go here\n                      toast.info('Export feature coming soon!');\n                    }}\n                  >\n                    <FaDownload className=\"me-1\" />\n                    Export\n                  </button>\n                </div>\n              </div>\n\n              {attendance.length > 0 ? (\n                <div className=\"table-responsive\">\n                  <table className=\"table table-hover attendance-table\">\n                    <thead>\n                      <tr>\n                        <th>Student Name</th>\n                        <th>Student ID</th>\n                        <th>Department</th>\n                        <th>Year</th>\n                        <th>Mobile Number</th>\n                        <th>Status</th>\n                        <th>Time</th>\n                        <th>Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {attendance.map((record) => (\n                        <tr key={record._id}>\n                          <td>\n                            <strong>{record.student.name}</strong>\n                          </td>\n                          <td>{record.student.studentId}</td>\n                          <td>{record.student.department}</td>\n                          <td>{record.student.year}</td>\n                          <td>{record.student.mobileNumber}</td>\n                          <td>\n                            <span className={`status-badge status-${record.status}`}>\n                              {record.status}\n                            </span>\n                          </td>\n                          <td>\n                            {new Date(record.markedAt).toLocaleTimeString()}\n                          </td>\n                          <td>\n                            <button\n                              className=\"btn btn-outline-danger btn-sm\"\n                              onClick={() => deleteAttendance(record._id)}\n                              title=\"Delete record\"\n                            >\n                              <FaTrash />\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              ) : (\n                <div className=\"text-center text-muted py-4\">\n                  <FaCalendarAlt size={50} className=\"mb-3\" />\n                  <p>No attendance records found for this date</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AttendanceView; ","import React from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport DashboardHome from './DashboardHome';\r\nimport QRGenerator from './QRGenerator';\r\nimport AttendanceView from './AttendanceView';\r\n\r\nconst TeacherDashboard = () => {\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<DashboardHome />} />\r\n      <Route path=\"/qr-generate\" element={<QRGenerator />} />\r\n      <Route path=\"/attendance\" element={<AttendanceView />} />\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default TeacherDashboard; ","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport axios from 'axios';\nimport { FaQrcode, FaCalendarAlt, FaUser } from 'react-icons/fa';\n\nconst DashboardHome = () => {\n  const { user } = useAuth();\n  const [stats, setStats] = useState({\n    totalAttendance: 0,\n    presentDays: 0,\n    lateDays: 0,\n    attendanceRate: 0\n  });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchStudentStats();\n  }, []);\n\n  const fetchStudentStats = async () => {\n    try {\n      const startDate = new Date();\n      startDate.setDate(startDate.getDate() - 30); // Last 30 days\n      \n      const response = await axios.get('/api/attendance/my-attendance', {\n        params: {\n          startDate: startDate.toISOString().split('T')[0],\n          endDate: new Date().toISOString().split('T')[0]\n        }\n      });\n\n      const attendance = response.data.data;\n      const presentCount = attendance.filter(a => a.status === 'present').length;\n      const lateCount = attendance.filter(a => a.status === 'late').length;\n      const totalCount = attendance.length;\n\n      setStats({\n        totalAttendance: totalCount,\n        presentDays: presentCount,\n        lateDays: lateCount,\n        attendanceRate: totalCount > 0 ? Math.round((presentCount / totalCount) * 100) : 0\n      });\n    } catch (error) {\n      console.error('Error fetching student stats:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"loading-spinner\">\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"row mb-4\">\n        <div className=\"col-12\">\n          <h2 className=\"fw-bold text-white\">Student Dashboard</h2>\n          <p className=\"text-white-50\">Welcome back, {user?.name}!</p>\n        </div>\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"row mb-4\">\n        <div className=\"col-md-3 mb-3\">\n          <div className=\"stats-card\">\n            <div className=\"stats-number\">{stats.totalAttendance}</div>\n            <div className=\"stats-label\">Total Sessions</div>\n          </div>\n        </div>\n        <div className=\"col-md-3 mb-3\">\n          <div className=\"stats-card\">\n            <div className=\"stats-number\">{stats.presentDays}</div>\n            <div className=\"stats-label\">Present Days</div>\n          </div>\n        </div>\n        <div className=\"col-md-3 mb-3\">\n          <div className=\"stats-card\">\n            <div className=\"stats-number\">{stats.lateDays}</div>\n            <div className=\"stats-label\">Late Days</div>\n          </div>\n        </div>\n        <div className=\"col-md-3 mb-3\">\n          <div className=\"stats-card\">\n            <div className=\"stats-number\">{stats.attendanceRate}%</div>\n            <div className=\"stats-label\">Attendance Rate</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Quick Actions */}\n      <div className=\"row mb-4\">\n        <div className=\"col-12\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title mb-3\">Quick Actions</h5>\n              <div className=\"row\">\n                <div className=\"col-md-4 mb-3\">\n                  <Link to=\"/student/scan\" className=\"text-decoration-none\">\n                    <div className=\"card text-center h-100\">\n                      <div className=\"card-body\">\n                        <FaQrcode className=\"text-primary mb-3\" size={40} />\n                        <h6 className=\"card-title\">Scan QR Code</h6>\n                        <p className=\"card-text text-muted\">Mark your attendance</p>\n                      </div>\n                    </div>\n                  </Link>\n                </div>\n                <div className=\"col-md-4 mb-3\">\n                  <Link to=\"/student/my-attendance\" className=\"text-decoration-none\">\n                    <div className=\"card text-center h-100\">\n                      <div className=\"card-body\">\n                        <FaCalendarAlt className=\"text-success mb-3\" size={40} />\n                        <h6 className=\"card-title\">My Attendance</h6>\n                        <p className=\"card-text text-muted\">View your attendance history</p>\n                      </div>\n                    </div>\n                  </Link>\n                </div>\n                <div className=\"col-md-4 mb-3\">\n                  <Link to=\"/profile\" className=\"text-decoration-none\">\n                    <div className=\"card text-center h-100\">\n                      <div className=\"card-body\">\n                        <FaUser className=\"text-info mb-3\" size={40} />\n                        <h6 className=\"card-title\">Profile</h6>\n                        <p className=\"card-text text-muted\">Update your profile</p>\n                      </div>\n                    </div>\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Student Info */}\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title mb-3\">Student Information</h5>\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <p><strong>Name:</strong> {user?.name}</p>\n                  <p><strong>Student ID:</strong> {user?.studentId}</p>\n                  <p><strong>Email:</strong> {user?.email}</p>\n                </div>\n                <div className=\"col-md-6\">\n                  <p><strong>Department:</strong> {user?.department}</p>\n                  <p><strong>Year:</strong> {user?.year}</p>\n                  <p><strong>Mobile Number:</strong> {user?.mobileNumber}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardHome; ","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Html5QrcodeScanner } from 'html5-qrcode';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { FaQrcode, FaCheck, FaTimes, FaCamera } from 'react-icons/fa';\r\n\r\nconst QRScanner = () => {\r\n  const [scanning, setScanning] = useState(false);\r\n  const [result, setResult] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const scannerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (scannerRef.current) {\r\n        scannerRef.current.clear();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleScan = async (decodedText) => {\r\n    if (decodedText) {\r\n      setScanning(false);\r\n      if (scannerRef.current) {\r\n        scannerRef.current.clear();\r\n      }\r\n      setResult(decodedText);\r\n      await validateAndMarkAttendance(decodedText);\r\n    }\r\n  };\r\n\r\n  const handleError = (err) => {\r\n    console.error(err);\r\n    toast.error('Error scanning QR code');\r\n  };\r\n\r\n  const getCurrentLocation = () => {\r\n    return new Promise((resolve, reject) => {\r\n      if (!navigator.geolocation) {\r\n        resolve({ latitude: null, longitude: null });\r\n        return;\r\n      }\r\n\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          resolve({\r\n            latitude: position.coords.latitude,\r\n            longitude: position.coords.longitude\r\n          });\r\n        },\r\n        (error) => {\r\n          console.warn('Location access denied or unavailable:', error);\r\n          resolve({ latitude: null, longitude: null });\r\n        },\r\n        {\r\n          enableHighAccuracy: true,\r\n          timeout: 10000,\r\n          maximumAge: 60000\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  const validateAndMarkAttendance = async (qrCode) => {\r\n    setLoading(true);\r\n    \r\n    try {\r\n      // Get current location coordinates\r\n      const coordinates = await getCurrentLocation();\r\n      \r\n      // First validate the QR code\r\n      const validateResponse = await axios.post('/api/qr/validate', {\r\n        code: qrCode\r\n      });\r\n\r\n      if (validateResponse.data.success) {\r\n        // Mark attendance with coordinates\r\n        const attendanceResponse = await axios.post('/api/attendance/mark', {\r\n          qrCodeId: validateResponse.data.data._id,\r\n          coordinates\r\n        });\r\n\r\n        if (attendanceResponse.data.success) {\r\n          toast.success(attendanceResponse.data.message);\r\n          setResult({\r\n            success: true,\r\n            message: attendanceResponse.data.message,\r\n            data: attendanceResponse.data.data\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Failed to mark attendance';\r\n      toast.error(message);\r\n      setResult({\r\n        success: false,\r\n        message: message\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const resetScanner = () => {\r\n    setScanning(true);\r\n    setResult(null);\r\n  };\r\n\r\n  const startScanner = () => {\r\n    setScanning(true);\r\n    setResult(null);\r\n    \r\n    setTimeout(() => {\r\n      if (scannerRef.current) {\r\n        scannerRef.current.clear();\r\n      }\r\n      \r\n      scannerRef.current = new Html5QrcodeScanner(\r\n        \"qr-reader\",\r\n        { \r\n          fps: 10, \r\n          qrbox: { width: 250, height: 250 },\r\n          aspectRatio: 1.0\r\n        },\r\n        false\r\n      );\r\n      \r\n      scannerRef.current.render(handleScan, handleError);\r\n    }, 100);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row mb-4\">\r\n        <div className=\"col-12\">\r\n          <h2 className=\"fw-bold text-white\">Scan QR Code</h2>\r\n          <p className=\"text-white-50\">Scan the QR code to mark your attendance</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title mb-3 text-center\">QR Code Scanner</h5>\r\n              \r\n              {!scanning && !result && (\r\n                <div className=\"text-center\">\r\n                  <FaQrcode size={100} className=\"text-muted mb-3\" />\r\n                  <p className=\"text-muted\">Click the button below to start scanning</p>\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={startScanner}\r\n                  >\r\n                    <FaCamera className=\"me-2\" />\r\n                    Start Scanning\r\n                  </button>\r\n                </div>\r\n              )}\r\n\r\n              {scanning && (\r\n                <div className=\"text-center\">\r\n                  <div className=\"scanner-container mb-3\">\r\n                    <div id=\"qr-reader\"></div>\r\n                  </div>\r\n                  <p className=\"text-muted\">Point your camera at the QR code</p>\r\n                  <button\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={() => {\r\n                      setScanning(false);\r\n                      if (scannerRef.current) {\r\n                        scannerRef.current.clear();\r\n                      }\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n              )}\r\n\r\n              {result && (\r\n                <div className=\"text-center\">\r\n                  {result.success ? (\r\n                    <div className=\"alert alert-success\">\r\n                      <FaCheck className=\"me-2\" />\r\n                      {result.message}\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"alert alert-danger\">\r\n                      <FaTimes className=\"me-2\" />\r\n                      {result.message}\r\n                    </div>\r\n                  )}\r\n                  \r\n                  <div className=\"mt-3\">\r\n                    <button\r\n                      className=\"btn btn-primary me-2\"\r\n                      onClick={resetScanner}\r\n                      disabled={loading}\r\n                    >\r\n                      {loading ? (\r\n                        <>\r\n                          <span className=\"spinner-border spinner-border-sm me-2\" />\r\n                          Processing...\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <FaQrcode className=\"me-2\" />\r\n                          Scan Another\r\n                        </>\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Instructions */}\r\n      <div className=\"row mt-4\">\r\n        <div className=\"col-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title mb-3\">Instructions</h5>\r\n              <ul className=\"list-unstyled\">\r\n                <li className=\"mb-2\">\r\n                  <strong>1.</strong> Click \"Start Scanning\" to activate your camera\r\n                </li>\r\n                <li className=\"mb-2\">\r\n                  <strong>2.</strong> Point your camera at the QR code displayed by your teacher\r\n                </li>\r\n                <li className=\"mb-2\">\r\n                  <strong>3.</strong> Hold steady until the QR code is detected\r\n                </li>\r\n                <li className=\"mb-2\">\r\n                  <strong>4.</strong> Your attendance will be automatically marked\r\n                </li>\r\n                <li className=\"mb-2\">\r\n                  <strong>5.</strong> You can only mark attendance once per QR code\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRScanner; ","import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { FaCalendarAlt, FaChartBar } from 'react-icons/fa';\n\nconst MyAttendance = () => {\n  const [attendance, setAttendance] = useState([]);\n  const [stats, setStats] = useState({\n    total: 0,\n    present: 0,\n    late: 0,\n    attendanceRate: 0\n  });\n  const [startDate, setStartDate] = useState(new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]);\n  const [endDate, setEndDate] = useState(new Date().toISOString().split('T')[0]);\n  const [loading, setLoading] = useState(true);\n\n  const fetchAttendance = useCallback(async () => {\n    try {\n      setLoading(true);\n      console.log('Fetching attendance with params:', { startDate, endDate });\n      console.log('Axios headers:', axios.defaults.headers.common);\n      \n      const response = await axios.get('/api/attendance/my-attendance', {\n        params: {\n          startDate,\n          endDate\n        }\n      });\n\n      console.log('Attendance response:', response.data);\n      const data = response.data.data;\n      setAttendance(data);\n\n      // Calculate stats\n      const presentCount = data.filter(a => a.status === 'present').length;\n      const lateCount = data.filter(a => a.status === 'late').length;\n      const totalCount = data.length;\n\n      setStats({\n        total: totalCount,\n        present: presentCount,\n        late: lateCount,\n        attendanceRate: totalCount > 0 ? Math.round((presentCount / totalCount) * 100) : 0\n      });\n    } catch (error) {\n      console.error('Error fetching attendance:', error);\n      console.error('Error response:', error.response?.data);\n    } finally {\n      setLoading(false);\n    }\n  }, [startDate, endDate]);\n\n  useEffect(() => {\n    fetchAttendance();\n  }, [fetchAttendance]);\n\n  if (loading) {\n    return (\n      <div className=\"loading-spinner\">\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"row mb-4\">\n        <div className=\"col-12\">\n          <h2 className=\"fw-bold text-white\">My Attendance</h2>\n          <p className=\"text-white-50\">View your attendance history</p>\n        </div>\n      </div>\n\n      {/* Date Range Selector */}\n      <div className=\"row mb-4\">\n        <div className=\"col-md-6\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h6 className=\"card-title mb-3\">\n                <FaCalendarAlt className=\"me-2\" />\n                Date Range\n              </h6>\n              <div className=\"row\">\n                <div className=\"col-md-6 mb-3\">\n                  <label htmlFor=\"startDate\" className=\"form-label\">Start Date</label>\n                  <input\n                    type=\"date\"\n                    className=\"form-control\"\n                    id=\"startDate\"\n                    value={startDate}\n                    onChange={(e) => setStartDate(e.target.value)}\n                  />\n                </div>\n                <div className=\"col-md-6 mb-3\">\n                  <label htmlFor=\"endDate\" className=\"form-label\">End Date</label>\n                  <input\n                    type=\"date\"\n                    className=\"form-control\"\n                    id=\"endDate\"\n                    value={endDate}\n                    onChange={(e) => setEndDate(e.target.value)}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"row mb-4\">\n        <div className=\"col-md-3 mb-3\">\n          <div className=\"stats-card\">\n            <div className=\"stats-number\">{stats.total}</div>\n            <div className=\"stats-label\">Total Sessions</div>\n          </div>\n        </div>\n        <div className=\"col-md-3 mb-3\">\n          <div className=\"stats-card\">\n            <div className=\"stats-number\">{stats.present}</div>\n            <div className=\"stats-label\">Present</div>\n          </div>\n        </div>\n        <div className=\"col-md-3 mb-3\">\n          <div className=\"stats-card\">\n            <div className=\"stats-number\">{stats.late}</div>\n            <div className=\"stats-label\">Late</div>\n          </div>\n        </div>\n        <div className=\"col-md-3 mb-3\">\n          <div className=\"stats-card\">\n            <div className=\"stats-number\">{stats.attendanceRate}%</div>\n            <div className=\"stats-label\">Attendance Rate</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Attendance History */}\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                <h5 className=\"card-title mb-0\">\n                  <FaChartBar className=\"me-2\" />\n                  Attendance History\n                </h5>\n                <span className=\"text-muted\">\n                  {attendance.length} records found\n                </span>\n              </div>\n\n              {attendance.length > 0 ? (\n                <div className=\"table-responsive\">\n                  <table className=\"table table-hover attendance-table\">\n                    <thead>\n                      <tr>\n                        <th>Date</th>\n                        <th>Status</th>\n                        <th>Time</th>\n                        <th>Location</th>\n                        <th>Course</th>\n                        <th>Teacher</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {attendance.map((record) => (\n                        <tr key={record._id}>\n                          <td>\n                            <strong>\n                              {new Date(record.date).toLocaleDateString()}\n                            </strong>\n                          </td>\n                          <td>\n                            <span className={`status-badge status-${record.status}`}>\n                              {record.status}\n                            </span>\n                          </td>\n                          <td>\n                            {new Date(record.markedAt).toLocaleTimeString()}\n                          </td>\n                          <td>{record.location}</td>\n                          <td>{record.course}</td>\n                          <td>{record.teacher?.name || 'N/A'}</td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              ) : (\n                <div className=\"text-center text-muted py-4\">\n                  <FaCalendarAlt size={50} className=\"mb-3\" />\n                  <p>No attendance records found for the selected date range</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Attendance Summary */}\n      {attendance.length > 0 && (\n        <div className=\"row mt-4\">\n          <div className=\"col-12\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title mb-3\">Attendance Summary</h5>\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <p><strong>Total Sessions:</strong> {stats.total}</p>\n                    <p><strong>Present Days:</strong> {stats.present}</p>\n                  </div>\n                  <div className=\"col-md-6\">\n                    <p><strong>Late Days:</strong> {stats.late}</p>\n                    <p><strong>Attendance Rate:</strong> {stats.attendanceRate}%</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MyAttendance; ","import React from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport DashboardHome from './DashboardHome';\r\nimport QRScanner from './QRScanner';\r\nimport MyAttendance from './MyAttendance';\r\n\r\nconst StudentDashboard = () => {\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<DashboardHome />} />\r\n      <Route path=\"/scan\" element={<QRScanner />} />\r\n      <Route path=\"/my-attendance\" element={<MyAttendance />} />\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default StudentDashboard; ","import React, { useState } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { FaUser, FaEnvelope, FaIdCard, FaGraduationCap, FaLock, FaPhone } from 'react-icons/fa';\r\n\r\nconst Profile = () => {\r\n  const { user, updateProfile, changePassword } = useAuth();\r\n  const [activeTab, setActiveTab] = useState('profile');\r\n  const [profileData, setProfileData] = useState({\r\n    name: user?.name || '',\r\n    email: user?.email || '',\r\n    mobileNumber: user?.mobileNumber || '',\r\n    department: user?.department || '',\r\n    year: user?.year || 1\r\n  });\r\n  const [passwordData, setPasswordData] = useState({\r\n    currentPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleProfileChange = (e) => {\r\n    setProfileData({\r\n      ...profileData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPasswordData({\r\n      ...passwordData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleProfileSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      const result = await updateProfile(profileData);\r\n      if (result.success) {\r\n        setProfileData({\r\n          name: user?.name || '',\r\n          email: user?.email || '',\r\n          mobileNumber: user?.mobileNumber || '',\r\n          department: user?.department || '',\r\n          year: user?.year || 1\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Profile update error:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handlePasswordSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (passwordData.newPassword !== passwordData.confirmPassword) {\r\n      alert('New passwords do not match');\r\n      return;\r\n    }\r\n\r\n    if (passwordData.newPassword.length < 6) {\r\n      alert('New password must be at least 6 characters long');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const result = await changePassword(passwordData.currentPassword, passwordData.newPassword);\r\n      if (result.success) {\r\n        setPasswordData({\r\n          currentPassword: '',\r\n          newPassword: '',\r\n          confirmPassword: ''\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Password change error:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row mb-4\">\r\n        <div className=\"col-12\">\r\n          <h2 className=\"fw-bold text-white\">Profile</h2>\r\n          <p className=\"text-white-50\">Manage your account information</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"nav flex-column nav-pills\">\r\n                <button\r\n                  className={`nav-link ${activeTab === 'profile' ? 'active' : ''}`}\r\n                  onClick={() => setActiveTab('profile')}\r\n                >\r\n                  <FaUser className=\"me-2\" />\r\n                  Profile Information\r\n                </button>\r\n                <button\r\n                  className={`nav-link ${activeTab === 'password' ? 'active' : ''}`}\r\n                  onClick={() => setActiveTab('password')}\r\n                >\r\n                  <FaLock className=\"me-2\" />\r\n                  Change Password\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-9\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              {activeTab === 'profile' ? (\r\n                <div>\r\n                  <h5 className=\"card-title mb-3\">Profile Information</h5>\r\n                  <form onSubmit={handleProfileSubmit}>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6 mb-3\">\r\n                        <label htmlFor=\"name\" className=\"form-label\">\r\n                          Full Name\r\n                        </label>\r\n                        <div className=\"input-group\">\r\n                          <span className=\"input-group-text\">\r\n                            <FaUser />\r\n                          </span>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"name\"\r\n                            name=\"name\"\r\n                            value={profileData.name}\r\n                            onChange={handleProfileChange}\r\n                            required\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"col-md-6 mb-3\">\r\n                        <label htmlFor=\"email\" className=\"form-label\">\r\n                          Email Address\r\n                        </label>\r\n                        <div className=\"input-group\">\r\n                          <span className=\"input-group-text\">\r\n                            <FaEnvelope />\r\n                          </span>\r\n                          <input\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            value={profileData.email}\r\n                            onChange={handleProfileChange}\r\n                            required\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                      <label htmlFor=\"mobileNumber\" className=\"form-label\">\r\n                        Mobile Number\r\n                      </label>\r\n                      <div className=\"input-group\">\r\n                        <span className=\"input-group-text\">\r\n                          <FaPhone />\r\n                        </span>\r\n                        <input\r\n                          type=\"tel\"\r\n                          className=\"form-control\"\r\n                          id=\"mobileNumber\"\r\n                          name=\"mobileNumber\"\r\n                          value={profileData.mobileNumber}\r\n                          onChange={handleProfileChange}\r\n                          required\r\n                          placeholder=\"Enter your 10-digit mobile number\"\r\n                          maxLength=\"10\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    {user?.role === 'student' && (\r\n                      <>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-md-6 mb-3\">\r\n                            <label htmlFor=\"studentId\" className=\"form-label\">\r\n                              Student ID\r\n                            </label>\r\n                            <div className=\"input-group\">\r\n                              <span className=\"input-group-text\">\r\n                                <FaIdCard />\r\n                              </span>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"studentId\"\r\n                                value={user?.studentId}\r\n                                disabled\r\n                              />\r\n                            </div>\r\n                            <small className=\"text-muted\">Student ID cannot be changed</small>\r\n                          </div>\r\n\r\n                          <div className=\"col-md-6 mb-3\">\r\n                            <label htmlFor=\"department\" className=\"form-label\">\r\n                              Department\r\n                            </label>\r\n                            <div className=\"input-group\">\r\n                              <span className=\"input-group-text\">\r\n                                <FaGraduationCap />\r\n                              </span>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"department\"\r\n                                name=\"department\"\r\n                                value={profileData.department}\r\n                                onChange={handleProfileChange}\r\n                                required\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                          <label htmlFor=\"year\" className=\"form-label\">\r\n                            Year\r\n                          </label>\r\n                          <select\r\n                            className=\"form-select\"\r\n                            id=\"year\"\r\n                            name=\"year\"\r\n                            value={profileData.year}\r\n                            onChange={handleProfileChange}\r\n                            required\r\n                          >\r\n                            <option value={1}>1st Year</option>\r\n                            <option value={2}>2nd Year</option>\r\n                            \r\n                          </select>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-primary\"\r\n                      disabled={loading}\r\n                    >\r\n                      {loading ? (\r\n                        <>\r\n                          <span className=\"spinner-border spinner-border-sm me-2\" />\r\n                          Updating...\r\n                        </>\r\n                      ) : (\r\n                        'Update Profile'\r\n                      )}\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <h5 className=\"card-title mb-3\">Change Password</h5>\r\n                  <form onSubmit={handlePasswordSubmit}>\r\n                    <div className=\"mb-3\">\r\n                      <label htmlFor=\"currentPassword\" className=\"form-label\">\r\n                        Current Password\r\n                      </label>\r\n                      <div className=\"input-group\">\r\n                        <span className=\"input-group-text\">\r\n                          <FaLock />\r\n                        </span>\r\n                        <input\r\n                          type=\"password\"\r\n                          className=\"form-control\"\r\n                          id=\"currentPassword\"\r\n                          name=\"currentPassword\"\r\n                          value={passwordData.currentPassword}\r\n                          onChange={handlePasswordChange}\r\n                          required\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                      <label htmlFor=\"newPassword\" className=\"form-label\">\r\n                        New Password\r\n                      </label>\r\n                      <div className=\"input-group\">\r\n                        <span className=\"input-group-text\">\r\n                          <FaLock />\r\n                        </span>\r\n                        <input\r\n                          type=\"password\"\r\n                          className=\"form-control\"\r\n                          id=\"newPassword\"\r\n                          name=\"newPassword\"\r\n                          value={passwordData.newPassword}\r\n                          onChange={handlePasswordChange}\r\n                          required\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"mb-4\">\r\n                      <label htmlFor=\"confirmPassword\" className=\"form-label\">\r\n                        Confirm New Password\r\n                      </label>\r\n                      <div className=\"input-group\">\r\n                        <span className=\"input-group-text\">\r\n                          <FaLock />\r\n                        </span>\r\n                        <input\r\n                          type=\"password\"\r\n                          className=\"form-control\"\r\n                          id=\"confirmPassword\"\r\n                          name=\"confirmPassword\"\r\n                          value={passwordData.confirmPassword}\r\n                          onChange={handlePasswordChange}\r\n                          required\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-primary\"\r\n                      disabled={loading}\r\n                    >\r\n                      {loading ? (\r\n                        <>\r\n                          <span className=\"spinner-border spinner-border-sm me-2\" />\r\n                          Changing Password...\r\n                        </>\r\n                      ) : (\r\n                        'Change Password'\r\n                      )}\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile; ","import React from 'react';\r\n\r\nconst LoadingSpinner = () => {\r\n  return (\r\n    <div className=\"loading-spinner\">\r\n      <div className=\"spinner-border\" role=\"status\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner; ","import React from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport { useAuth } from './contexts/AuthContext';\nimport Navbar from './components/Navbar';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport ForgotPassword from './components/auth/ForgotPassword';\nimport ResetPassword from './components/auth/ResetPassword';\nimport TeacherDashboard from './components/teacher/TeacherDashboard';\nimport StudentDashboard from './components/student/StudentDashboard';\nimport Profile from './components/Profile';\nimport LoadingSpinner from './components/LoadingSpinner';\n\nconst App = () => {\n  const { isAuthenticated, loading, user } = useAuth();\n\n  console.log('App - Auth State:', { isAuthenticated, loading, user: user?.name, role: user?.role });\n\n  if (loading) {\n    return <LoadingSpinner />;\n  }\n\n  if (!isAuthenticated) {\n    console.log('App - Not authenticated, showing login routes');\n    return (\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/register\" element={<Register />} />\n          <Route path=\"/forgot-password\" element={<ForgotPassword />} />\n          <Route path=\"/reset-password/:token\" element={<ResetPassword />} />\n          <Route path=\"*\" element={<Navigate to=\"/login\" replace />} />\n        </Routes>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"container mt-4\">\n        <Routes>\n          <Route \n            path=\"/\" \n            element={\n              user?.role === 'teacher' \n                ? <Navigate to=\"/teacher\" replace />\n                : <Navigate to=\"/student\" replace />\n            } \n          />\n          <Route \n            path=\"/teacher/*\" \n            element={\n              user?.role === 'teacher' \n                ? <TeacherDashboard />\n                : <Navigate to=\"/student\" replace />\n            } \n          />\n          <Route \n            path=\"/student/*\" \n            element={\n              user?.role === 'student' \n                ? <StudentDashboard />\n                : <Navigate to=\"/teacher\" replace />\n            } \n          />\n          <Route path=\"/profile\" element={<Profile />} />\n          <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n        </Routes>\n      </div>\n    </>\n  );\n};\n\nexport default App; ","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { AuthProvider } from './contexts/AuthContext';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <AuthProvider>\r\n        <App />\r\n        <ToastContainer\r\n          position=\"top-right\"\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </AuthProvider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n); "],"sourceRoot":""}